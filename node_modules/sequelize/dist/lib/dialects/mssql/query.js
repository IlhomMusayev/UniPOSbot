"use strict";var E=Object.defineProperty;var b=(d,e)=>E(d,"name",{value:e,configurable:!0});const C=require("../abstract/query"),w=require("../../errors"),A=require("../parserStore")("mssql"),p=require("lodash"),{logger:Q}=require("../../utils/logger"),T=Q.debugContext("sql:mssql");function N(d){if(!Number.isFinite(d))return 0;let e=1;for(;Math.round(d*e)/e!==d;)e*=10;return Math.log10(e)}b(N,"getScale");class g extends C{getInsertIdField(){return"id"}getSQLTypeFromJsType(e,n){const t={type:n.VarChar,typeOptions:{}};return t.type=n.NVarChar,typeof e=="number"?Number.isInteger(e)?e>=-2147483648&&e<=2147483647?t.type=n.Int:t.type=n.BigInt:(t.type=n.Numeric,t.typeOptions={precision:30,scale:N(e)}):typeof e=="boolean"&&(t.type=n.Bit),Buffer.isBuffer(e)&&(t.type=n.VarBinary),t}async _run(e,n,t,s){this.sql=n;const{options:i}=this,o=this._logQuery(n,T,t),u=new Promise((l,h)=>{if(n.startsWith("BEGIN TRANSACTION"))return e.beginTransaction(r=>r?h(r):l([]),i.transaction.name,e.lib.ISOLATION_LEVEL[i.isolationLevel]);if(n.startsWith("COMMIT TRANSACTION"))return e.commitTransaction(r=>r?h(r):l([]));if(n.startsWith("ROLLBACK TRANSACTION"))return e.rollbackTransaction(r=>r?h(r):l([]),i.transaction.name);if(n.startsWith("SAVE TRANSACTION"))return e.saveTransaction(r=>r?h(r):l([]),i.transaction.name);const m=[],y=new e.lib.Request(n,(r,f)=>r?h(r):l([m,f]));t&&p.forOwn(t,(r,f)=>{const I=this.getSQLTypeFromJsType(r,e.lib.TYPES);y.addParameter(f,I.type,r,I.typeOptions)}),y.on("row",r=>{m.push(r)}),e.execSql(y)});let a,c;try{[a,c]=await u}catch(l){throw l.sql=n,l.parameters=t,this.formatError(l,s)}return o(),Array.isArray(a)&&(a=a.map(l=>{const h={};for(const m of l){const y=m.metadata.type.id,r=A.get(y);let f=m.value;f!==null&!!r&&(f=r(f)),h[m.metadata.colName]=f}return h})),this.formatResults(a,c)}run(e,n){const t=new Error;return this.connection.queue.enqueue(()=>this._run(this.connection,e,n,t.stack))}static formatBindParameters(e,n,t){const s={},i=b((o,u,a)=>{if(a[u]!==void 0)return s[u]=a[u],`@${u}`},"replacementFunc");return e=C.formatBindParameters(e,n,t,i)[0],[e,s]}formatResults(e,n){if(this.isInsertQuery(e))return this.handleInsertQuery(e),[this.instance||e,n];if(this.isShowTablesQuery())return this.handleShowTablesQuery(e);if(this.isDescribeQuery()){const t={};for(const s of e)s.Default&&(s.Default=s.Default.replace("('","").replace("')","").replace(/'/g,"")),t[s.Name]={type:s.Type.toUpperCase(),allowNull:s.IsNull==="YES",defaultValue:s.Default,primaryKey:s.Constraint==="PRIMARY KEY",autoIncrement:s.IsIdentity===1,comment:s.Comment},t[s.Name].type.includes("CHAR")&&s.Length&&(s.Length===-1?t[s.Name].type+="(MAX)":t[s.Name].type+=`(${s.Length})`);return t}return this.isSelectQuery()?this.handleSelectQuery(e):this.isShowIndexesQuery()?this.handleShowIndexesQuery(e):this.isCallQuery()?e[0]:this.isBulkUpdateQuery()?this.options.returning?this.handleSelectQuery(e):n:this.isBulkDeleteQuery()?e[0]?e[0].AFFECTEDROWS:0:this.isVersionQuery()?e[0].version:this.isForeignKeysQuery()?e:this.isUpsertQuery()?(this.handleInsertQuery(e),[this.instance||e,e[0].$action==="INSERT"]):this.isUpdateQuery()?[this.instance||e,n]:this.isShowConstraintsQuery()?this.handleShowConstraintsQuery(e):this.isRawQuery()?[e,n]:e}handleShowTablesQuery(e){return e.map(n=>({tableName:n.TABLE_NAME,schema:n.TABLE_SCHEMA}))}handleShowConstraintsQuery(e){return e.slice(1).map(n=>{const t={};for(const s in n)t[p.camelCase(s)]=n[s];return t})}formatError(e,n){let t;if(t=e.message.match(/Violation of (?:UNIQUE|PRIMARY) KEY constraint '([^']*)'. Cannot insert duplicate key in object '.*'.(:? The duplicate key value is \((.*)\).)?/),t=t||e.message.match(/Cannot insert duplicate key row in object .* with unique index '(.*)'/),t&&t.length>1){let s={};const i=this.model&&this.model.uniqueKeys[t[1]];let o="Validation error";if(i&&!!i.msg&&(o=i.msg),t[3]){const a=t[3].split(",").map(c=>c.trim());i?s=p.zipObject(i.fields,a):s[t[1]]=t[3]}const u=[];return p.forOwn(s,(a,c)=>{u.push(new w.ValidationErrorItem(this.getUniqueConstraintErrorMessage(c),"unique violation",c,a,this.instance,"not_unique"))}),new w.UniqueConstraintError({message:o,errors:u,parent:e,fields:s,stack:n})}if(t=e.message.match(/Failed on step '(.*)'.Could not create constraint. See previous errors./)||e.message.match(/The DELETE statement conflicted with the REFERENCE constraint "(.*)". The conflict occurred in database "(.*)", table "(.*)", column '(.*)'./)||e.message.match(/The (?:INSERT|MERGE|UPDATE) statement conflicted with the FOREIGN KEY constraint "(.*)". The conflict occurred in database "(.*)", table "(.*)", column '(.*)'./),t&&t.length>0)return new w.ForeignKeyConstraintError({fields:null,index:t[1],parent:e,stack:n});if(t=e.message.match(/Could not drop constraint. See previous errors./),t&&t.length>0){let s=e.sql.match(/(?:constraint|index) \[(.+?)\]/i);s=s?s[1]:void 0;let i=e.sql.match(/table \[(.+?)\]/i);return i=i?i[1]:void 0,new w.UnknownConstraintError({message:t[1],constraint:s,table:i,parent:e,stack:n})}return new w.DatabaseError(e,{stack:n})}isShowOrDescribeQuery(){let e=!1;return e=e||this.sql.toLowerCase().startsWith("select c.column_name as 'name', c.data_type as 'type', c.is_nullable as 'isnull'"),e=e||this.sql.toLowerCase().startsWith("select tablename = t.name, name = ind.name,"),e=e||this.sql.toLowerCase().startsWith("exec sys.sp_helpindex @objname"),e}isShowIndexesQuery(){return this.sql.toLowerCase().startsWith("exec sys.sp_helpindex @objname")}handleShowIndexesQuery(e){return e=e.reduce((n,t)=>(t.index_name in n||(n[t.index_name]=t,t.fields=[]),t.index_keys.split(",").forEach(s=>{let i=s.trim();i.includes("(-)")&&(i=i.replace("(-)","")),n[t.index_name].fields.push({attribute:i,length:void 0,order:s.includes("(-)")?"DESC":"ASC",collate:void 0})}),delete t.index_keys,n),{}),p.map(e,n=>({primary:n.index_name.toLowerCase().startsWith("pk"),fields:n.fields,name:n.index_name,tableName:void 0,unique:n.index_description.toLowerCase().includes("unique"),type:void 0}))}handleInsertQuery(e,n){if(this.instance){const t=this.model.autoIncrementAttribute;let s=null,i=null;if(Object.prototype.hasOwnProperty.call(this.model.rawAttributes,t)&&this.model.rawAttributes[t].field!==void 0&&(i=this.model.rawAttributes[t].field),s=s||e&&e[0][this.getInsertIdField()],s=s||n&&n[this.getInsertIdField()],s=s||e&&e[0][t],s=s||i&&e&&e[0][i],this.instance[t]=s,this.instance.dataValues){for(const o in e[0])if(Object.prototype.hasOwnProperty.call(e[0],o)){const u=e[0][o],a=p.find(this.model.rawAttributes,c=>c.fieldName===o||c.field===o);this.instance.dataValues[a&&a.fieldName||o]=u}}}}}b(g,"Query"),module.exports=g,module.exports.Query=g,module.exports.default=g;
//# sourceMappingURL=query.js.map
