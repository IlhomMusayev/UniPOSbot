"use strict";var b=Object.defineProperty;var h=(m,e)=>b(m,"name",{value:e,configurable:!0});const p=require("toposort-class"),c=require("lodash");class u{constructor(e){this.models=[],this.sequelize=e}addModel(e){return this.models.push(e),this.sequelize.models[e.name]=e,e}removeModel(e){this.models=this.models.filter(t=>t.name!==e.name),delete this.sequelize.models[e.name]}getModel(e,t){return t=c.defaults(t||{},{attribute:"name"}),this.models.find(l=>l[t.attribute]===e)}get all(){return this.models}forEachModel(e,t){const l={},n=new p;let o,a;t=c.defaults(t||{},{reverse:!0});for(const s of this.models){let i=[],r=s.getTableName();c.isObject(r)&&(r=`${r.schema}.${r.tableName}`),l[r]=s;for(const d in s.rawAttributes)if(Object.prototype.hasOwnProperty.call(s.rawAttributes,d)){const f=s.rawAttributes[d];f.references&&(a=f.references.model,c.isObject(a)&&(a=`${a.schema}.${a.tableName}`),i.push(a))}i=i.filter(d=>r!==d),n.add(r,i)}o=n.sort(),t.reverse&&(o=o.reverse());for(const s of o)e(l[s],s)}}h(u,"ModelManager"),module.exports=u,module.exports.ModelManager=u,module.exports.default=u;
//# sourceMappingURL=model-manager.js.map
