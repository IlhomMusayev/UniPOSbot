"use strict";var c=Object.defineProperty;var o=(r,t)=>c(r,"name",{value:t,configurable:!0});const u=require("./data-types"),{logger:y}=require("./utils/logger");function g(r,t,e,s){return r.reduce((n,i,p)=>(p!==0&&(n+=", "),Array.isArray(i)?n+=`(${g(i,t,e,s)})`:n+=f(i,t,e,s),n),"")}o(g,"arrayToList"),exports.arrayToList=g;function f(r,t,e,s){let n=!1;if(r==null)return"NULL";switch(typeof r){case"boolean":return e==="sqlite"||e==="mssql"?+!!r:(!!r).toString();case"number":return r.toString();case"string":n=e==="mssql";break}if(r instanceof Date&&(r=u[e].DATE.prototype.stringify(r,{timezone:t})),Buffer.isBuffer(r))return u[e].BLOB?u[e].BLOB.prototype.stringify(r):u.BLOB.prototype.stringify(r);if(Array.isArray(r)){const i=o(p=>f(p,t,e,s),"partialEscape");return e==="postgres"&&!s?u.ARRAY.prototype.stringify(r,{escape:i}):g(r,t,e,s)}if(!r.replace)throw new Error(`Invalid value ${y.inspect(r)}`);return e==="postgres"||e==="sqlite"||e==="mssql"?(r=r.replace(/'/g,"''"),e==="postgres"&&(r=r.replace(/\0/g,"\\0"))):r=r.replace(/[\0\n\r\b\t\\'"\x1a]/g,i=>{switch(i){case"\0":return"\\0";case`
`:return"\\n";case"\r":return"\\r";case"\b":return"\\b";case"	":return"\\t";case"":return"\\Z";default:return`\\${i}`}}),`${(n?"N'":"'")+r}'`}o(f,"escape"),exports.escape=f;function a(r,t,e,s){if(t=[].concat(t),typeof r!="string")throw new Error(`Invalid SQL string provided: ${r}`);return r.replace(/\?/g,n=>t.length?f(t.shift(),e,s,!0):n)}o(a,"format"),exports.format=a;function h(r,t,e,s){return r.replace(/:+(?!\d)(\w+)/g,(n,i)=>{if(s==="postgres"&&n.slice(0,2)==="::")return n;if(t[i]!==void 0)return f(t[i],e,s,!0);throw new Error(`Named parameter "${n}" has no value in the given object.`)})}o(h,"formatNamedParameters"),exports.formatNamedParameters=h;
//# sourceMappingURL=sql-string.js.map
