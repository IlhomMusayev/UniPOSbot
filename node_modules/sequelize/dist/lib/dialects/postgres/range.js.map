{
  "version": 3,
  "sources": ["../../../../lib/dialects/postgres/range.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '' ;\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === 'infinity') {\n    return Infinity;\n  }\n  if (bound === '-infinity') {\n    return -Infinity;\n  }\n  return parseType(bound);\n\n}\n\nfunction stringify(data) {\n  if (data === null) return null;\n\n  if (!Array.isArray(data)) throw new Error('range must be an array');\n  if (!data.length) return 'empty';\n  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) data.inclusive = [false, false];\n    else if (!data.inclusive) data.inclusive = [true, false];\n    else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) data[index] = value.value;\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\nexports.stringify = stringify;\n\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === 'empty') {\n    return [];\n  }\n\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) return value;\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']'\n    };\n  });\n\n  return result;\n}\nexports.parse = parse;\n"],
  "mappings": "4FAEA,KAAM,GAAI,QAAQ,UAElB,WAA6B,EAAO,CAClC,MAAI,KAAU,KACL,GAEL,IAAU,KAAY,IAAU,KAC3B,EAAM,WAAW,cAEnB,KAAK,UAAU,GAPf,2BAUT,WAAyB,EAAO,EAAW,CACzC,MAAK,GAGD,IAAU,WACL,IAEL,IAAU,YACL,KAEF,EAAU,GARR,KAFF,uBAcT,WAAmB,EAAM,CACvB,GAAI,IAAS,KAAM,MAAO,MAE1B,GAAI,CAAC,MAAM,QAAQ,GAAO,KAAM,IAAI,OAAM,0BAC1C,GAAI,CAAC,EAAK,OAAQ,MAAO,QACzB,GAAI,EAAK,SAAW,EAAG,KAAM,IAAI,OAAM,sEAEvC,AAAI,OAAO,UAAU,eAAe,KAAK,EAAM,aAC7C,AAAI,EAAK,YAAc,GAAO,EAAK,UAAY,CAAC,GAAO,IAClD,AAAK,EAAK,UACN,EAAK,YAAc,IAAM,GAAK,UAAY,CAAC,GAAM,KADhC,EAAK,UAAY,CAAC,GAAM,IAGlD,EAAK,UAAY,CAAC,GAAM,IAG1B,EAAE,KAAK,EAAM,CAAC,EAAO,IAAU,CAC7B,AAAI,EAAE,SAAS,IACT,QAAO,UAAU,eAAe,KAAK,EAAO,cAAc,GAAK,UAAU,GAAS,CAAC,CAAC,EAAM,WAC1F,OAAO,UAAU,eAAe,KAAK,EAAO,UAAU,GAAK,GAAS,EAAM,UAIlF,KAAM,GAAa,EAAoB,EAAK,IACtC,EAAa,EAAoB,EAAK,IAE5C,MAAO,GAAI,GAAK,UAAU,GAAK,IAAM,KAAO,KAAc,IAAa,EAAK,UAAU,GAAK,IAAM,MAzB1F,iBA2BT,QAAQ,UAAY,EAEpB,WAAe,EAAO,EAAQ,CAC5B,GAAI,IAAU,KAAM,MAAO,MAC3B,GAAI,IAAU,QACZ,MAAO,GAGT,GAAI,GAAS,EACV,UAAU,EAAG,EAAM,OAAS,GAC5B,MAAM,IAAK,GAEd,MAAI,GAAO,SAAW,EAAU,EAEhC,GAAS,EAAO,IAAI,CAAC,EAAM,IAClB,EACL,MAAO,EAAgB,EAAM,GAC7B,UAAW,IAAU,EAAI,EAAM,KAAO,IAAM,EAAM,EAAM,OAAS,KAAO,OAIrE,GAnBA,aAqBT,QAAQ,MAAQ",
  "names": []
}
