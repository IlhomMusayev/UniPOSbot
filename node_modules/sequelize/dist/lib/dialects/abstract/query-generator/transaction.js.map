{
  "version": 3,
  "sources": ["../../../../../lib/dialects/abstract/query-generator/transaction.js"],
  "sourcesContent": ["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"],
  "mappings": "aAEA,KAAM,GAAS,QAAQ,QAAQ,GAEzB,EAAqB,CASzB,uBAAuB,EAAO,EAAS,CACrC,GAAI,GAAQ,OAIZ,MAAO,mCAAmC,MAG5C,uBAAwB,CACtB,MAAO,MAUT,sBAAsB,EAAa,CACjC,MAAI,GAAY,OAEP,aAAa,KAAK,gBAAgB,EAAY,KAAM,OAGtD,sBAGT,uBAAwB,GAExB,oBAAqB,GACrB,kBAAmB,GACnB,mBAAoB,GASpB,uBAAuB,EAAa,CAClC,GAAI,GAAY,OAIhB,MAAO,WAUT,yBAAyB,EAAa,CACpC,MAAI,GAAY,OAEP,yBAAyB,KAAK,gBAAgB,EAAY,KAAM,OAGlE,cAIX,OAAO,QAAU",
  "names": []
}
