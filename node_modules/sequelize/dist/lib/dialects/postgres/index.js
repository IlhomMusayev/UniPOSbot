"use strict";var n=Object.defineProperty;var o=(r,t)=>n(r,"name",{value:t,configurable:!0});const u=require("lodash"),s=require("../abstract"),a=require("./connection-manager"),p=require("./query"),c=require("./query-generator"),i=require("../../data-types").postgres,{PostgresQueryInterface:y}=require("./query-interface");class e extends s{constructor(t){super();this.sequelize=t,this.connectionManager=new a(this,t),this.queryGenerator=new c({_dialect:this,sequelize:t}),this.queryInterface=new y(t,this.queryGenerator)}}o(e,"PostgresDialect"),e.prototype.supports=u.merge(u.cloneDeep(s.prototype.supports),{"DEFAULT VALUES":!0,EXCEPTION:!0,"ON DUPLICATE KEY":!1,"ORDER NULLS":!0,returnValues:{returning:!0},bulkDefault:!0,schemas:!0,lock:!0,lockOf:!0,lockKey:!0,lockOuterJoinFailure:!0,skipLocked:!0,forShare:"FOR SHARE",index:{concurrently:!0,using:2,where:!0,functionBased:!0,operator:!0},inserts:{onConflictDoNothing:" ON CONFLICT DO NOTHING",updateOnDuplicate:" ON CONFLICT DO UPDATE SET"},NUMERIC:!0,ARRAY:!0,RANGE:!0,GEOMETRY:!0,REGEXP:!0,GEOGRAPHY:!0,JSON:!0,JSONB:!0,HSTORE:!0,TSVECTOR:!0,deferrableConstraints:!0,searchPath:!0}),e.prototype.defaultVersion="9.5.0",e.prototype.Query=p,e.prototype.DataTypes=i,e.prototype.name="postgres",e.prototype.TICK_CHAR='"',e.prototype.TICK_CHAR_LEFT=e.prototype.TICK_CHAR,e.prototype.TICK_CHAR_RIGHT=e.prototype.TICK_CHAR,module.exports=e,module.exports.default=e,module.exports.PostgresDialect=e;
//# sourceMappingURL=index.js.map
