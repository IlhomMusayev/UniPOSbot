{
  "version": 3,
  "sources": ["../../../../lib/dialects/mariadb/query.js"],
  "sourcesContent": ["'use strict';\n\nconst AbstractQuery = require('../abstract/query');\nconst sequelizeErrors = require('../../errors');\nconst _ = require('lodash');\nconst DataTypes = require('../../data-types');\nconst { logger } = require('../../utils/logger');\n\nconst ER_DUP_ENTRY = 1062;\nconst ER_DEADLOCK = 1213;\nconst ER_ROW_IS_REFERENCED = 1451;\nconst ER_NO_REFERENCED_ROW = 1452;\n\nconst debug = logger.debugContext('sql:mariadb');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super(connection, sequelize, { showWarnings: false, ...options });\n  }\n\n  static formatBindParameters(sql, values, dialect) {\n    const bindParam = [];\n    const replacementFunc = (match, key, values_) => {\n      if (values_[key] !== undefined) {\n        bindParam.push(values_[key]);\n        return '?';\n      }\n      return undefined;\n    };\n    sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n    return [sql, bindParam.length > 0 ? bindParam : undefined];\n  }\n\n  async run(sql, parameters) {\n    this.sql = sql;\n    const { connection, options } = this;\n\n    const showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n\n    const complete = this._logQuery(sql, debug, parameters);\n\n    if (parameters) {\n      debug('parameters(%j)', parameters);\n    }\n\n    let results;\n    const errForStack = new Error();\n\n    try {\n      results = await connection.query(this.sql, parameters);\n    } catch (error) {\n      if (options.transaction && error.errno === ER_DEADLOCK) {\n        // MariaDB automatically rolls-back transactions in the event of a deadlock.\n        // However, we still initiate a manual rollback to ensure the connection gets released - see #13102.\n        try {\n          await options.transaction.rollback();\n        } catch (error_) {\n          // Ignore errors - since MariaDB automatically rolled back, we're\n          // not that worried about this redundant rollback failing.\n        }\n\n        options.transaction.finished = 'rollback';\n      }\n\n      error.sql = sql;\n      error.parameters = parameters;\n      throw this.formatError(error, errForStack.stack);\n    } finally {\n      complete();\n    }\n\n    if (showWarnings && results && results.warningStatus > 0) {\n      await this.logWarnings(results);\n    }\n    return this.formatResults(results);\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n      return data.affectedRows;\n    }\n    if (this.isUpsertQuery()) {\n      return [result, data.affectedRows === 1];\n    }\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primary key\n        if (\n          this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          // ONLY TRUE IF @auto_increment_increment is set to 1 !!\n          // Doesn't work with GALERA => each node will reserve increment (x for first server, x+1 for next node...)\n          const startId = data[this.getInsertIdField()];\n          result = new Array(data.affectedRows);\n          const pkField = this.model.rawAttributes[this.model.primaryKeyAttribute].field;\n          for (let i = 0; i < data.affectedRows; i++) {\n            result[i] = { [pkField]: startId + i };\n          }\n          return [result, data.affectedRows];\n        }\n\n        return [data[this.getInsertIdField()], data.affectedRows];\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      this.handleJsonSelectQuery(data);\n      return this.handleSelectQuery(data);\n    }\n    if (this.isInsertQuery() || this.isUpdateQuery()) {\n      return [result, data.affectedRows];\n    }\n    if (this.isCallQuery()) {\n      return data[0];\n    }\n    if (this.isRawQuery()) {\n      const meta = data.meta;\n      delete data.meta;\n      return [data, meta];\n    }\n    if (this.isShowIndexesQuery()) {\n      return this.handleShowIndexesQuery(data);\n    }\n    if (this.isForeignKeysQuery() || this.isShowConstraintsQuery()) {\n      return data;\n    }\n    if (this.isShowTablesQuery()) {\n      return this.handleShowTablesQuery(data);\n    }\n    if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        result[_result.Field] = {\n          type: _result.Type.toLowerCase().startsWith('enum') ? _result.Type.replace(/^enum/i,\n            'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI',\n          autoIncrement: Object.prototype.hasOwnProperty.call(_result, 'Extra')\n            && _result.Extra.toLowerCase() === 'auto_increment',\n          comment: _result.Comment ? _result.Comment : null\n        };\n      }\n      return result;\n    }\n    if (this.isVersionQuery()) {\n      return data[0].version;\n    }\n\n    return result;\n  }\n\n  handleJsonSelectQuery(rows) {\n    if (!this.model || !this.model.fieldRawAttributesMap) {\n      return;\n    }\n    for (const _field of Object.keys(this.model.fieldRawAttributesMap)) {\n      const modelField = this.model.fieldRawAttributesMap[_field];\n      if (modelField.type instanceof DataTypes.JSON) {\n        // Value is returned as String, not JSON\n        rows = rows.map(row => {\n          if (row[modelField.fieldName] && typeof row[modelField.fieldName] === 'string') {\n            row[modelField.fieldName] = JSON.parse(row[modelField.fieldName]);\n          }\n          if (DataTypes.JSON.parse) {\n            return DataTypes.JSON.parse(modelField, this.sequelize.options,\n              row[modelField.fieldName]);\n          }\n          return row;\n        });\n      }\n    }\n  }\n\n  async logWarnings(results) {\n    const warningResults = await this.run('SHOW WARNINGS');\n    const warningMessage = `MariaDB Warnings (${this.connection.uuid || 'default'}): `;\n    const messages = [];\n    for (const _warningRow of warningResults) {\n      if (_warningRow === undefined || typeof _warningRow[Symbol.iterator] !== 'function') {\n        continue;\n      }\n      for (const _warningResult of _warningRow) {\n        if (Object.prototype.hasOwnProperty.call(_warningResult, 'Message')) {\n          messages.push(_warningResult.Message);\n        } else {\n          for (const _objectKey of _warningResult.keys()) {\n            messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n          }\n        }\n      }\n    }\n\n    this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n    return results;\n  }\n\n  formatError(err, errStack) {\n    switch (err.errno) {\n      case ER_DUP_ENTRY: {\n        const match = err.message.match(\n          /Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?\\s.*$/);\n\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const fieldKey = match ? match[2] : undefined;\n        const fieldVal = match ? match[1] : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[fieldKey] = fieldVal;\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n      }\n\n      case ER_ROW_IS_REFERENCED:\n      case ER_NO_REFERENCED_ROW: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match = err.message.match(\n          /CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/\n        );\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: err.errno === ER_ROW_IS_REFERENCED ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err,\n          stack: errStack\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  handleShowTablesQuery(results) {\n    return results.map(resultSet => ({\n      tableName: resultSet.TABLE_NAME,\n      schema: resultSet.TABLE_SCHEMA\n    }));\n  }\n\n  handleShowIndexesQuery(data) {\n\n    let currItem;\n    const result = [];\n\n    data.forEach(item => {\n      if (!currItem || currItem.name !== item.Key_name) {\n        currItem = {\n          primary: item.Key_name === 'PRIMARY',\n          fields: [],\n          name: item.Key_name,\n          tableName: item.Table,\n          unique: item.Non_unique !== 1,\n          type: item.Index_type\n        };\n        result.push(currItem);\n      }\n\n      currItem.fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n    });\n\n    return result;\n  }\n}\n\nmodule.exports = Query;\n"],
  "mappings": "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",
  "names": []
}
