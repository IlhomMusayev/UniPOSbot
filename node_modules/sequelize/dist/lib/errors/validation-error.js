"use strict";var f=Object.defineProperty;var h=(g,s)=>f(g,"name",{value:s,configurable:!0});const d=require("./base-error");class u extends d{constructor(s,i,t){super(s);this.name="SequelizeValidationError",this.message="Validation Error",this.errors=i||[],s?this.message=s:this.errors.length>0&&this.errors[0].message&&(this.message=this.errors.map(e=>`${e.type||e.origin}: ${e.message}`).join(`,
`)),t&&t.stack&&(this.stack=t.stack)}get(s){return this.errors.reduce((i,t)=>(t.path===s&&i.push(t),i),[])}}h(u,"ValidationError");class r{constructor(s,i,t,e,o,n,a,c){if(this.message=s||"",this.type=null,this.path=t||null,this.value=e!==void 0?e:null,this.origin=null,this.instance=o||null,this.validatorKey=n||null,this.validatorName=a||null,this.validatorArgs=c||[],i)if(r.Origins[i])this.origin=i;else{const p=`${i}`.toLowerCase().trim(),l=r.TypeStringMap[p];l&&r.Origins[l]&&(this.origin=l,this.type=i)}}getValidatorKey(s,i){const t=s===void 0||!!s,e=i===void 0?".":i,o=this.origin,n=this.validatorKey||this.validatorName,a=t&&o&&r.Origins[o];if(a&&(typeof e!="string"||!e.length))throw new Error("Invalid namespace separator given, must be a non-empty string");return typeof n=="string"&&n.length?(a?[o,n].join(e):n).toLowerCase().trim():""}}h(r,"ValidationErrorItem"),r.Origins={CORE:"CORE",DB:"DB",FUNCTION:"FUNCTION"},r.TypeStringMap={"notnull violation":"CORE","string violation":"CORE","unique violation":"DB","validation error":"FUNCTION"},module.exports=u,module.exports.ValidationErrorItem=r;
//# sourceMappingURL=validation-error.js.map
