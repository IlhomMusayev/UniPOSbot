{
  "version": 3,
  "sources": ["../../../lib/utils/class-to-invokable.js"],
  "sourcesContent": ["'use strict';\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {Function} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nfunction classToInvokable(Class) {\n  return new Proxy(Class, {\n    apply(Target, thisArg, args) {\n      return new Target(...args);\n    },\n    construct(Target, args) {\n      return new Target(...args);\n    },\n    get(target, p) {\n      return target[p];\n    }\n  });\n}\nexports.classToInvokable = classToInvokable;\n"],
  "mappings": "4FAUA,WAA0B,EAAO,CAC/B,MAAO,IAAI,OAAM,EAAO,CACtB,MAAM,EAAQ,EAAS,EAAM,CAC3B,MAAO,IAAI,GAAO,GAAG,IAEvB,UAAU,EAAQ,EAAM,CACtB,MAAO,IAAI,GAAO,GAAG,IAEvB,IAAI,EAAQ,EAAG,CACb,MAAO,GAAO,MATX,wBAaT,QAAQ,iBAAmB",
  "names": []
}
