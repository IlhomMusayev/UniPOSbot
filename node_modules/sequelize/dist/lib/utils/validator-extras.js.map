{
  "version": 3,
  "sources": ["../../../lib/utils/validator-extras.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\nconst validator = _.cloneDeep(require('validator'));\nconst moment = require('moment');\n\nconst extensions = {\n  extend(name, fn) {\n    this[name] = fn;\n\n    return this;\n  },\n  notEmpty(str) {\n    return !str.match(/^[\\s\\t\\r\\n]*$/);\n  },\n  len(str, min, max) {\n    return this.isLength(str, min, max);\n  },\n  isUrl(str) {\n    return this.isURL(str);\n  },\n  isIPv6(str) {\n    return this.isIP(str, 6);\n  },\n  isIPv4(str) {\n    return this.isIP(str, 4);\n  },\n  notIn(str, values) {\n    return !this.isIn(str, values);\n  },\n  regex(str, pattern, modifiers) {\n    str += '';\n    if (Object.prototype.toString.call(pattern).slice(8, -1) !== 'RegExp') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return str.match(pattern);\n  },\n  notRegex(str, pattern, modifiers) {\n    return !this.regex(str, pattern, modifiers);\n  },\n  isDecimal(str) {\n    return str !== '' && !!str.match(/^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][+-]?(?:[0-9]+))?$/);\n  },\n  min(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number >= val;\n  },\n  max(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number <= val;\n  },\n  not(str, pattern, modifiers) {\n    return this.notRegex(str, pattern, modifiers);\n  },\n  contains(str, elem) {\n    return !!elem && str.includes(elem);\n  },\n  notContains(str, elem) {\n    return !this.contains(str, elem);\n  },\n  is(str, pattern, modifiers) {\n    return this.regex(str, pattern, modifiers);\n  }\n};\nexports.extensions = extensions;\n\n// instance based validators\nvalidator.isImmutable = function(value, validatorArgs, field, modelInstance) {\n  return modelInstance.isNewRecord || modelInstance.dataValues[field] === modelInstance._previousDataValues[field];\n};\n\n// extra validators\nvalidator.notNull = function(val) {\n  return val !== null && val !== undefined;\n};\n\n// https://github.com/chriso/validator.js/blob/6.2.0/validator.js\n_.forEach(extensions, (extend, key) => {\n  validator[key] = extend;\n});\n\n// map isNull to isEmpty\n// https://github.com/chriso/validator.js/commit/e33d38a26ee2f9666b319adb67c7fc0d3dea7125\nvalidator.isNull = validator.isEmpty;\n\n// isDate removed in 7.0.0\n// https://github.com/chriso/validator.js/commit/095509fc707a4dc0e99f85131df1176ad6389fc9\nvalidator.isDate = function(dateString) {\n  // avoid http://momentjs.com/guides/#/warnings/js-date/\n  // by doing a preliminary check on `dateString`\n  const parsed = Date.parse(dateString);\n  if (isNaN(parsed)) {\n    // fail if we can't parse it\n    return false;\n  }\n  // otherwise convert to ISO 8601 as moment prefers\n  // http://momentjs.com/docs/#/parsing/string/\n  const date = new Date(parsed);\n  return moment(date.toISOString()).isValid();\n};\n\nexports.validator = validator;\n"],
  "mappings": "aAEA,KAAM,GAAI,QAAQ,UACZ,EAAY,EAAE,UAAU,QAAQ,cAChC,EAAS,QAAQ,UAEjB,EAAa,CACjB,OAAO,EAAM,EAAI,CACf,YAAK,GAAQ,EAEN,MAET,SAAS,EAAK,CACZ,MAAO,CAAC,EAAI,MAAM,kBAEpB,IAAI,EAAK,EAAK,EAAK,CACjB,MAAO,MAAK,SAAS,EAAK,EAAK,IAEjC,MAAM,EAAK,CACT,MAAO,MAAK,MAAM,IAEpB,OAAO,EAAK,CACV,MAAO,MAAK,KAAK,EAAK,IAExB,OAAO,EAAK,CACV,MAAO,MAAK,KAAK,EAAK,IAExB,MAAM,EAAK,EAAQ,CACjB,MAAO,CAAC,KAAK,KAAK,EAAK,IAEzB,MAAM,EAAK,EAAS,EAAW,CAC7B,UAAO,GACH,OAAO,UAAU,SAAS,KAAK,GAAS,MAAM,EAAG,MAAQ,UAC3D,GAAU,GAAI,QAAO,EAAS,IAEzB,EAAI,MAAM,IAEnB,SAAS,EAAK,EAAS,EAAW,CAChC,MAAO,CAAC,KAAK,MAAM,EAAK,EAAS,IAEnC,UAAU,EAAK,CACb,MAAO,KAAQ,IAAM,CAAC,CAAC,EAAI,MAAM,6DAEnC,IAAI,EAAK,EAAK,CACZ,KAAM,GAAS,WAAW,GAC1B,MAAO,OAAM,IAAW,GAAU,GAEpC,IAAI,EAAK,EAAK,CACZ,KAAM,GAAS,WAAW,GAC1B,MAAO,OAAM,IAAW,GAAU,GAEpC,IAAI,EAAK,EAAS,EAAW,CAC3B,MAAO,MAAK,SAAS,EAAK,EAAS,IAErC,SAAS,EAAK,EAAM,CAClB,MAAO,CAAC,CAAC,GAAQ,EAAI,SAAS,IAEhC,YAAY,EAAK,EAAM,CACrB,MAAO,CAAC,KAAK,SAAS,EAAK,IAE7B,GAAG,EAAK,EAAS,EAAW,CAC1B,MAAO,MAAK,MAAM,EAAK,EAAS,KAGpC,QAAQ,WAAa,EAGrB,EAAU,YAAc,SAAS,EAAO,EAAe,EAAO,EAAe,CAC3E,MAAO,GAAc,aAAe,EAAc,WAAW,KAAW,EAAc,oBAAoB,IAI5G,EAAU,QAAU,SAAS,EAAK,CAChC,MAAO,IAAQ,MAIjB,EAAE,QAAQ,EAAY,CAAC,EAAQ,IAAQ,CACrC,EAAU,GAAO,IAKnB,EAAU,OAAS,EAAU,QAI7B,EAAU,OAAS,SAAS,EAAY,CAGtC,KAAM,GAAS,KAAK,MAAM,GAC1B,GAAI,MAAM,GAER,MAAO,GAIT,KAAM,GAAO,GAAI,MAAK,GACtB,MAAO,GAAO,EAAK,eAAe,WAGpC,QAAQ,UAAY",
  "names": []
}
