{
  "version": 3,
  "sources": ["../../../lib/errors/aggregate-error.js"],
  "sourcesContent": ["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * A wrapper for multiple Errors\n *\n * @param {Error[]} [errors] Array of errors\n *\n * @property errors {Error[]}\n */\nclass AggregateError extends BaseError {\n  constructor(errors) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString() {\n    const message = `AggregateError of:\\n${\n      this.errors.map(error =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/mg, '  ')\n            : String(error).replace(/^/mg, '    ').substring(2)\n        \n      ).join('\\n')\n    }\\n`;\n    return message;\n  }\n}\n\nmodule.exports = AggregateError;\n"],
  "mappings": "4FAEA,KAAM,GAAY,QAAQ,gBAS1B,eAA6B,EAAU,CACrC,YAAY,EAAQ,CAClB,QACA,KAAK,OAAS,EACd,KAAK,KAAO,iBAGd,UAAW,CAWT,MAVgB;AAAA,EACd,KAAK,OAAO,IAAI,GACd,IAAU,KACN,4BACA,YAAiB,GACf,OAAO,GAAO,QAAQ,MAAO,IAAI,QAAQ,MAAO,MAChD,OAAO,GAAO,QAAQ,MAAO,QAAQ,UAAU,IAErD,KAAK;AAAA;AAAA,GAhBb,sBAsBA,OAAO,QAAU",
  "names": []
}
