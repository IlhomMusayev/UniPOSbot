"use strict";var z=Object.defineProperty,W=Object.defineProperties;var H=Object.getOwnPropertyDescriptors;var K=Object.getOwnPropertySymbols;var Y=Object.prototype.hasOwnProperty,X=Object.prototype.propertyIsEnumerable;var V=(w,e,t)=>e in w?z(w,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):w[e]=t,N=(w,e)=>{for(var t in e||(e={}))Y.call(e,t)&&V(w,t,e[t]);if(K)for(var t of K(e))X.call(e,t)&&V(w,t,e[t]);return w},M=(w,e)=>W(w,H(e));var L=(w,e)=>z(w,"name",{value:e,configurable:!0});const x=require("util"),$=require("lodash"),Z=require("uuid").v4,d=require("../../utils"),k=require("../../utils/deprecations"),J=require("../../sql-string"),C=require("../../data-types"),j=require("../../model"),F=require("../../associations/base"),P=require("../../associations/belongs-to"),v=require("../../associations/belongs-to-many"),ee=require("../../associations/has-many"),c=require("../../operators"),U=require("../../errors"),B=require("../../index-hints"),G=require("./query-generator/helpers/quote");class R{constructor(e){if(!e.sequelize)throw new Error("QueryGenerator initialized without options.sequelize");if(!e._dialect)throw new Error("QueryGenerator initialized without options._dialect");this.sequelize=e.sequelize,this.options=e.sequelize.options,this.dialect=e._dialect.name,this._dialect=e._dialect}extractTableDetails(e,t){return t=t||{},e=e||{},{schema:e.schema||t.schema||"public",tableName:$.isPlainObject(e)?e.tableName:e,delimiter:e.delimiter||t.delimiter||"."}}addSchema(e){if(!e._schema)return e.tableName||e;const t=this;return{tableName:e.tableName||e,table:e.tableName||e,name:e.name||e,schema:e._schema,delimiter:e._schemaDelimiter||".",toString(){return t.quoteTable(this)}}}dropSchema(e,t){return this.dropTableQuery(e,t)}describeTableQuery(e,t,i){return`DESCRIBE ${this.quoteTable(this.addSchema({tableName:e,_schema:t,_schemaDelimiter:i}))};`}dropTableQuery(e){return`DROP TABLE IF EXISTS ${this.quoteTable(e)};`}renameTableQuery(e,t){return`ALTER TABLE ${this.quoteTable(e)} RENAME TO ${this.quoteTable(t)};`}insertQuery(e,t,i,r){r=r||{},$.defaults(r,this.options);const n={},a=[],u=[],s=[],l=[],o=this.quoteTable(e),g=r.bindParam===void 0?this.bindParam(a):r.bindParam;let f,m="",y="",h="",p="",A=!1,I="";if(i&&$.each(i,(q,b)=>{n[b]=q,q.field&&(n[q.field]=q)}),this._dialect.supports["DEFAULT VALUES"]?y+=" DEFAULT VALUES":this._dialect.supports["VALUES ()"]&&(y+=" VALUES ()"),this._dialect.supports.returnValues&&r.returning){const q=this.generateReturnValues(i,r);s.push(...q.returnFields),p=q.returningFragment,I=q.tmpTable||"",h=q.outputFragment||""}($.get(this,["sequelize","options","dialectOptions","prependSearchPath"])||r.searchPath)&&(r.bindParam=!1),this._dialect.supports.EXCEPTION&&r.exception&&(r.bindParam=!1),t=d.removeNullValuesFromHash(t,this.options.omitNull);for(const q in t)if(Object.prototype.hasOwnProperty.call(t,q)){const b=t[q];u.push(this.quoteIdentifier(q)),n&&n[q]&&n[q].autoIncrement===!0&&b==null?this._dialect.supports.autoIncrement.defaultValue?this._dialect.supports.DEFAULT?l.push("DEFAULT"):l.push(this.escape(null)):u.splice(-1,1):(n&&n[q]&&n[q].autoIncrement===!0&&(A=!0),b instanceof d.SequelizeMethod||r.bindParam===!1?l.push(this.escape(b,n&&n[q]||void 0,{context:"INSERT"})):l.push(this.format(b,n&&n[q]||void 0,{context:"INSERT"},g)))}let E="";if(this._dialect.supports.inserts.updateOnDuplicate&&r.updateOnDuplicate)if(this._dialect.supports.inserts.updateOnDuplicate==" ON CONFLICT DO UPDATE SET"){const q=r.upsertKeys.map(O=>this.quoteIdentifier(O)),b=r.updateOnDuplicate.map(O=>`${this.quoteIdentifier(O)}=EXCLUDED.${this.quoteIdentifier(O)}`);E=` ON CONFLICT (${q.join(",")}) DO UPDATE SET ${b.join(",")}`}else{const q=r.updateOnDuplicate.map(b=>`${this.quoteIdentifier(b)}=VALUES(${this.quoteIdentifier(b)})`);E+=`${this._dialect.supports.inserts.updateOnDuplicate} ${q.join(",")}`}const S={ignoreDuplicates:r.ignoreDuplicates?this._dialect.supports.inserts.ignoreDuplicates:"",onConflictDoNothing:r.ignoreDuplicates?this._dialect.supports.inserts.onConflictDoNothing:"",attributes:u.join(","),output:h,values:l.join(","),tmpTable:I};if(m=`${I}INSERT${S.ignoreDuplicates} INTO ${o} (${S.attributes})${S.output} VALUES (${S.values})${E}${S.onConflictDoNothing}${m}`,y=`${I}INSERT${S.ignoreDuplicates} INTO ${o}${S.output}${E}${S.onConflictDoNothing}${y}`,this._dialect.supports.EXCEPTION&&r.exception){const q="DROP FUNCTION IF EXISTS pg_temp.testfunc()";s.length===0&&s.push("*");const b=`$func_${Z().replace(/-/g,"")}$`,O=`SELECT (testfunc.response).${s.join(", (testfunc.response).")}, testfunc.sequelize_caught_exception FROM pg_temp.testfunc();`;r.exception="WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL;",m=`CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response ${o}, OUT sequelize_caught_exception text) RETURNS RECORD AS ${b} BEGIN ${m} RETURNING * INTO response; EXCEPTION ${r.exception} END ${b} LANGUAGE plpgsql; ${O} ${q}`}else m+=p,y+=p;f=`${S.attributes.length?m:y};`,A&&this._dialect.supports.autoIncrement.identityInsert&&(f=`SET IDENTITY_INSERT ${o} ON; ${f} SET IDENTITY_INSERT ${o} OFF;`);const _={query:f};return r.bindParam!==!1&&(_.bind=a),_}bulkInsertQuery(e,t,i,r){i=i||{},r=r||{};const n=[],a={},u=[];let s="";for(const m of t)$.forOwn(m,(y,h)=>{u.includes(h)||u.push(h),r[h]&&r[h].autoIncrement===!0&&(a[h]=!0)});for(const m of t){const y=u.map(h=>this._dialect.supports.bulkDefault&&a[h]===!0?m[h]!=null?m[h]:"DEFAULT":this.escape(m[h],r[h],{context:"INSERT"}));n.push(`(${y.join(",")})`)}if(this._dialect.supports.inserts.updateOnDuplicate&&i.updateOnDuplicate)if(this._dialect.supports.inserts.updateOnDuplicate==" ON CONFLICT DO UPDATE SET"){const m=i.upsertKeys.map(h=>this.quoteIdentifier(h)),y=i.updateOnDuplicate.map(h=>`${this.quoteIdentifier(h)}=EXCLUDED.${this.quoteIdentifier(h)}`);s=` ON CONFLICT (${m.join(",")}) DO UPDATE SET ${y.join(",")}`}else{const m=i.updateOnDuplicate.map(y=>`${this.quoteIdentifier(y)}=VALUES(${this.quoteIdentifier(y)})`);s=`${this._dialect.supports.inserts.updateOnDuplicate} ${m.join(",")}`}const l=i.ignoreDuplicates?this._dialect.supports.inserts.ignoreDuplicates:"",o=u.map(m=>this.quoteIdentifier(m)).join(","),g=i.ignoreDuplicates?this._dialect.supports.inserts.onConflictDoNothing:"";let f="";return this._dialect.supports.returnValues&&i.returning&&(f+=this.generateReturnValues(r,i).returningFragment),d.joinSQLFragments(["INSERT",l,"INTO",this.quoteTable(e),`(${o})`,"VALUES",n.join(","),s,g,f,";"])}updateQuery(e,t,i,r,n){r=r||{},$.defaults(r,this.options),t=d.removeNullValuesFromHash(t,r.omitNull,r);const a=[],u=[],s={};let l="",o="",g="";($.get(this,["sequelize","options","dialectOptions","prependSearchPath"])||r.searchPath)&&(r.bindParam=!1);const f=r.bindParam===void 0?this.bindParam(u):r.bindParam;if(this._dialect.supports["LIMIT ON UPDATE"]&&r.limit&&this.dialect!=="mssql"&&(g=` LIMIT ${this.escape(r.limit)} `),this._dialect.supports.returnValues&&r.returning){const p=this.generateReturnValues(n,r);g+=p.returningFragment,o=p.tmpTable||"",l=p.outputFragment||"",!this._dialect.supports.returnValues.output&&r.returning&&(r.mapToModel=!0)}n&&$.each(n,(p,A)=>{s[A]=p,p.field&&(s[p.field]=p)});for(const p in t){if(s&&s[p]&&s[p].autoIncrement===!0&&!this._dialect.supports.autoIncrement.update)continue;const A=t[p];A instanceof d.SequelizeMethod||r.bindParam===!1?a.push(`${this.quoteIdentifier(p)}=${this.escape(A,s&&s[p]||void 0,{context:"UPDATE"})}`):a.push(`${this.quoteIdentifier(p)}=${this.format(A,s&&s[p]||void 0,{context:"UPDATE"},f)}`)}const m=M(N({},r),{bindParam:f});if(a.length===0)return"";const h={query:`${o}UPDATE ${this.quoteTable(e)} SET ${a.join(",")}${l} ${this.whereQuery(i,m)}${g}`.trim()};return r.bindParam!==!1&&(h.bind=u),h}arithmeticQuery(e,t,i,r,n,a){a=a||{},$.defaults(a,{returning:!0}),n=d.removeNullValuesFromHash(n,this.options.omitNull);let u="",s="";if(this._dialect.supports.returnValues&&a.returning){const o=this.generateReturnValues(null,a);u=o.outputFragment,s=o.returningFragment}const l=[];for(const o in r){const g=r[o],f=this.quoteIdentifier(o),m=this.escape(g);l.push(`${f}=${f}${e} ${m}`)}for(const o in n){const g=n[o],f=this.quoteIdentifier(o),m=this.escape(g);l.push(`${f}=${m}`)}return d.joinSQLFragments(["UPDATE",this.quoteTable(t),"SET",l.join(","),u,this.whereQuery(i),s])}addIndexQuery(e,t,i,r){i=i||{},Array.isArray(t)?i.fields=t:(i=t,t=void 0),i.prefix=i.prefix||r||e,i.prefix&&typeof i.prefix=="string"&&(i.prefix=i.prefix.replace(/\./g,"_"),i.prefix=i.prefix.replace(/("|')/g,""));const n=i.fields.map(s=>{if(s instanceof d.SequelizeMethod)return this.handleSequelizeMethod(s);typeof s=="string"&&(s={name:s});let l="";if(s.attribute&&(s.name=s.attribute),!s.name)throw new Error(`The following index field has no name: ${x.inspect(s)}`);if(l+=this.quoteIdentifier(s.name),this._dialect.supports.index.collate&&s.collate&&(l+=` COLLATE ${this.quoteIdentifier(s.collate)}`),this._dialect.supports.index.operator){const o=s.operator||i.operator;o&&(l+=` ${o}`)}return this._dialect.supports.index.length&&s.length&&(l+=`(${s.length})`),s.order&&(l+=` ${s.order}`),l});i.name||(i=d.nameIndex(i,i.prefix)),i=j._conformIndex(i),this._dialect.supports.index.type||delete i.type,i.where&&(i.where=this.whereQuery(i.where)),typeof e=="string"?e=this.quoteIdentifiers(e):e=this.quoteTable(e);const a=this._dialect.supports.index.concurrently&&i.concurrently?"CONCURRENTLY":void 0;let u;return this._dialect.supports.indexViaAlter?u=["ALTER TABLE",e,a,"ADD"]:u=["CREATE"],u=u.concat(i.unique?"UNIQUE":"",i.type,"INDEX",this._dialect.supports.indexViaAlter?void 0:a,this.quoteIdentifiers(i.name),this._dialect.supports.index.using===1&&i.using?`USING ${i.using}`:"",this._dialect.supports.indexViaAlter?void 0:`ON ${e}`,this._dialect.supports.index.using===2&&i.using?`USING ${i.using}`:"",`(${n.join(", ")})`,this._dialect.supports.index.parser&&i.parser?`WITH PARSER ${i.parser}`:void 0,this._dialect.supports.index.where&&i.where?i.where:void 0),$.compact(u).join(" ")}addConstraintQuery(e,t){return typeof e=="string"?e=this.quoteIdentifiers(e):e=this.quoteTable(e),d.joinSQLFragments(["ALTER TABLE",e,"ADD",this.getConstraintSnippet(e,t||{}),";"])}getConstraintSnippet(e,t){let i,r;const n=t.fields.map(s=>{if(typeof s=="string")return this.quoteIdentifier(s);if(s instanceof d.SequelizeMethod)return this.handleSequelizeMethod(s);if(s.attribute&&(s.name=s.attribute),!s.name)throw new Error(`The following index field has no name: ${s}`);return this.quoteIdentifier(s.name)}),a=n.join(", "),u=n.join("_");switch(t.type.toUpperCase()){case"UNIQUE":r=this.quoteIdentifier(t.name||`${e}_${u}_uk`),i=`CONSTRAINT ${r} UNIQUE (${a})`;break;case"CHECK":t.where=this.whereItemsQuery(t.where),r=this.quoteIdentifier(t.name||`${e}_${u}_ck`),i=`CONSTRAINT ${r} CHECK (${t.where})`;break;case"DEFAULT":if(t.defaultValue===void 0)throw new Error("Default value must be specifed for DEFAULT CONSTRAINT");if(this._dialect.name!=="mssql")throw new Error("Default constraints are supported only for MSSQL dialect.");r=this.quoteIdentifier(t.name||`${e}_${u}_df`),i=`CONSTRAINT ${r} DEFAULT (${this.escape(t.defaultValue)}) FOR ${n[0]}`;break;case"PRIMARY KEY":r=this.quoteIdentifier(t.name||`${e}_${u}_pk`),i=`CONSTRAINT ${r} PRIMARY KEY (${a})`;break;case"FOREIGN KEY":const s=t.references;if(!s||!s.table||!(s.field||s.fields))throw new Error("references object with table and field must be specified");r=this.quoteIdentifier(t.name||`${e}_${u}_${s.table}_fk`);const l=typeof s.field!="undefined"?this.quoteIdentifier(s.field):s.fields.map(g=>this.quoteIdentifier(g)).join(", "),o=`${this.quoteTable(s.table)} (${l})`;i=`CONSTRAINT ${r} `,i+=`FOREIGN KEY (${a}) REFERENCES ${o}`,t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate.toUpperCase()}`),t.onDelete&&(i+=` ON DELETE ${t.onDelete.toUpperCase()}`);break;default:throw new Error(`${t.type} is invalid.`)}return t.deferrable&&["UNIQUE","PRIMARY KEY","FOREIGN KEY"].includes(t.type.toUpperCase())&&(i+=` ${this.deferConstraintsQuery(t)}`),i}removeConstraintQuery(e,t){return typeof e=="string"?e=this.quoteIdentifiers(e):e=this.quoteTable(e),d.joinSQLFragments(["ALTER TABLE",e,"DROP CONSTRAINT",this.quoteIdentifiers(t)])}quote(e,t,i){const r=["ASC","DESC","ASC NULLS LAST","DESC NULLS LAST","ASC NULLS FIRST","DESC NULLS FIRST","NULLS FIRST","NULLS LAST"];if(i=i||".",typeof e=="string")return this.quoteIdentifiers(e);if(Array.isArray(e)){e.forEach((o,g)=>{const f=e[g-1];let m,y;if(!f&&t!==void 0?y=t:f&&f instanceof F&&(m=f,y=f.target),y&&y.prototype instanceof j){let h,p;if(typeof o=="function"&&o.prototype instanceof j?h=o:$.isPlainObject(o)&&o.model&&o.model.prototype instanceof j&&(h=o.model,p=o.as),h&&(!p&&m&&m instanceof F&&m.through&&m.through.model===h?o=new F(y,h,{as:h.name}):(o=y.getAssociationForAlias(h,p),o||(o=y.getAssociationForAlias(h,h.name))),!(o instanceof F)))throw new Error(x.format("Unable to find a valid association for model, '%s'",h.name))}if(typeof o=="string"){const h=r.indexOf(o.toUpperCase());if(g>0&&h!==-1)o=this.sequelize.literal(` ${r[h]}`);else if(y&&y.prototype instanceof j){if(y.associations!==void 0&&y.associations[o])o=y.associations[o];else if(y.rawAttributes!==void 0&&y.rawAttributes[o]&&o!==y.rawAttributes[o].field)o=y.rawAttributes[o].field;else if(o.includes(".")&&y.rawAttributes!==void 0){const p=o.split(".");if(y.rawAttributes[p[0]].type instanceof C.JSON){const A=this.quoteIdentifiers(`${y.name}.${y.rawAttributes[p[0]].field}`),I=p.slice(1);o=this.jsonPathExtractionQuery(A,I),o=this.sequelize.literal(o)}}}}e[g]=o},this);const n=e.length,a=[];let u,s=0;for(s=0;s<n-1&&(u=e[s],!(typeof u=="string"||u._modelAttribute||u instanceof d.SequelizeMethod));s++)u instanceof F&&(a[s]=u.as);let l="";return s>0?l+=`${this.quoteIdentifier(a.join(i))}.`:typeof e[0]=="string"&&t&&(l+=`${this.quoteIdentifier(t.name)}.`),e.slice(s).forEach(o=>{l+=this.quote(o,t,i)},this),l}if(e._modelAttribute)return`${this.quoteTable(e.Model.name)}.${this.quoteIdentifier(e.fieldName)}`;if(e instanceof d.SequelizeMethod)return this.handleSequelizeMethod(e);throw $.isPlainObject(e)&&e.raw?new Error('The `{raw: "..."}` syntax is no longer supported.  Use `sequelize.literal` instead.'):new Error(`Unknown structure passed to order / group: ${x.inspect(e)}`)}quoteIdentifier(e,t){return G.quoteIdentifier(this.dialect,e,{force:t,quoteIdentifiers:this.options.quoteIdentifiers})}quoteIdentifiers(e){if(e.includes(".")){e=e.split(".");const t=e.slice(0,e.length-1).join("->"),i=e[e.length-1];return`${this.quoteIdentifier(t)}.${this.quoteIdentifier(i)}`}return this.quoteIdentifier(e)}quoteAttribute(e,t){return t&&e in t.rawAttributes?this.quoteIdentifier(e):this.quoteIdentifiers(e)}quoteTable(e,t){let i="";return t===!0&&(t=e.as||e.name||e),$.isObject(e)?this._dialect.supports.schemas?(e.schema&&(i+=`${this.quoteIdentifier(e.schema)}.`),i+=this.quoteIdentifier(e.tableName)):(e.schema&&(i+=e.schema+(e.delimiter||".")),i+=e.tableName,i=this.quoteIdentifier(i)):i=this.quoteIdentifier(e),t&&(i+=` AS ${this.quoteIdentifier(t)}`),i}escape(e,t,i){if(i=i||{},e!=null){if(e instanceof d.SequelizeMethod)return this.handleSequelizeMethod(e);if(t&&t.type&&(this.validate(e,t,i),t.type.stringify)){const r=L(n=>J.escape(n,this.options.timezone,this.dialect),"simpleEscape");if(e=t.type.stringify(e,{escape:r,field:t,timezone:this.options.timezone,operation:i.operation}),t.type.escape===!1)return e}}return J.escape(e,this.options.timezone,this.dialect)}bindParam(e){return t=>(e.push(t),`$${e.length}`)}format(e,t,i,r){if(i=i||{},e!=null){if(e instanceof d.SequelizeMethod)throw new Error("Cannot pass SequelizeMethod as a bind parameter - use escape instead");if(t&&t.type&&(this.validate(e,t,i),t.type.bindParam))return t.type.bindParam(e,{escape:$.identity,field:t,timezone:this.options.timezone,operation:i.operation,bindParam:r})}return r(e)}validate(e,t,i){if(this.typeValidation&&t.type.validate&&e)try{if(i.isList&&Array.isArray(e))for(const r of e)t.type.validate(r,i);else t.type.validate(e,i)}catch(r){throw r instanceof U.ValidationError&&r.errors.push(new U.ValidationErrorItem(r.message,"Validation error",t.fieldName,e,null,`${t.type.key} validator`)),r}}isIdentifierQuoted(e){return G.isIdentifierQuoted(e)}jsonPathExtractionQuery(e,t){let i=$.toPath(t),r;const n=this.isIdentifierQuoted(e)?e:this.quoteIdentifier(e);switch(this.dialect){case"mysql":case"mariadb":case"sqlite":return this.dialect==="mysql"&&(i=i.map(a=>/\D/.test(a)?d.addTicks(a,'"'):a)),r=this.escape(["$"].concat(i).join(".").replace(/\.(\d+)(?:(?=\.)|$)/g,(a,u)=>`[${u}]`)),this.dialect==="sqlite"?`json_extract(${n},${r})`:`json_unquote(json_extract(${n},${r}))`;case"postgres":return r=this.escape(`{${i.join(",")}}`),`(${n}#>>${r})`;default:throw new Error(`Unsupported ${this.dialect} for JSON operations`)}}selectQuery(e,t,i){t=t||{};const r=t.limit,n=[],a=[],u=t.subQuery===void 0?r&&t.hasMultiAssociation:t.subQuery,s={main:t.attributes&&t.attributes.slice(),subQuery:null},l={name:e,quotedName:null,as:null,model:i},o={names:l,options:t,subQuery:u};let g=[],f=[],m;if(this.options.minifyAliases&&!t.aliasesMapping&&(t.aliasesMapping=new Map,t.aliasesByTable={},t.includeAliases=new Map),t.tableAs?l.as=this.quoteIdentifier(t.tableAs):!Array.isArray(l.name)&&l.model&&(l.as=this.quoteIdentifier(l.model.name)),l.quotedName=Array.isArray(l.name)?e.map(h=>Array.isArray(h)?this.quoteTable(h[0],h[1]):this.quoteTable(h,!0)).join(", "):this.quoteTable(l.name),u&&s.main)for(const h of l.model.primaryKeyAttributes)s.main.some(p=>h===p||h===p[0]||h===p[1])||s.main.push(l.model.rawAttributes[h].field?[h,l.model.rawAttributes[h].field]:h);if(s.main=this.escapeAttributes(s.main,t,l.as),s.main=s.main||(t.include?[`${l.as}.*`]:["*"]),(u||t.groupedLimit)&&(s.subQuery=s.main,s.main=[`${l.as||l.quotedName}.*`]),t.include)for(const h of t.include){if(h.separate)continue;const p=this.generateInclude(h,{externalAs:l.as,internalAs:l.as},o);f=f.concat(p.subQuery),g=g.concat(p.mainQuery),p.attributes.main.length>0&&(s.main=$.uniq(s.main.concat(p.attributes.main))),p.attributes.subQuery.length>0&&(s.subQuery=$.uniq(s.subQuery.concat(p.attributes.subQuery)))}if(u)a.push(this.selectFromTableFragment(t,l.model,s.subQuery,l.quotedName,l.as)),a.push(f.join(""));else{if(t.groupedLimit){l.as||(l.as=l.quotedName);const h=N({},t.where);let p,A,I,E=l.as;if(typeof t.groupedLimit.on=="string"?A=t.groupedLimit.on:t.groupedLimit.on instanceof ee&&(A=t.groupedLimit.on.foreignKeyField),t.groupedLimit.on instanceof v){E=t.groupedLimit.on.manyFromSource.as;const b=j._validateIncludedElements({include:[{association:t.groupedLimit.on.manyFromSource,duplicating:!1,required:!0,where:N({[c.placeholder]:!0},t.groupedLimit.through&&t.groupedLimit.through.where)}],model:i});t.hasJoin=!0,t.hasMultiAssociation=!0,t.includeMap=Object.assign(b.includeMap,t.includeMap),t.includeNames=b.includeNames.concat(t.includeNames||[]),I=b.include,Array.isArray(t.order)&&(t.order.forEach((O,Q)=>{Array.isArray(O)&&(O=O[0]);let T=`subquery_order_${Q}`;t.attributes.push([O,T]),T=this.sequelize.literal(this.quote(T)),Array.isArray(t.order[Q])?t.order[Q][0]=T:t.order[Q]=T}),p=t.order)}else p=t.order,delete t.order,h[c.placeholder]=!0;const S=`SELECT * FROM (${this.selectQuery(e,{attributes:t.attributes,offset:t.offset,limit:t.groupedLimit.limit,order:p,aliasesMapping:t.aliasesMapping,aliasesByTable:t.aliasesByTable,where:h,include:I,model:i},i).replace(/;$/,"")}) AS sub`,_=this.whereItemQuery(c.placeholder,!0,{model:i}),q=S.indexOf(_);n.push(this.selectFromTableFragment(t,l.model,s.main,`(${t.groupedLimit.values.map(b=>{let O;return A&&(O={[A]:b}),I&&(O={[t.groupedLimit.on.foreignIdentifierField]:b}),d.spliceStr(S,q,_.length,this.getWhereConditions(O,E))}).join(this._dialect.supports["UNION ALL"]?" UNION ALL ":" UNION ")})`,l.as))}else n.push(this.selectFromTableFragment(t,l.model,s.main,l.quotedName,l.as));n.push(g.join(""))}if(Object.prototype.hasOwnProperty.call(t,"where")&&!t.groupedLimit&&(t.where=this.getWhereConditions(t.where,l.as||e,i,t),t.where&&(u?a.push(` WHERE ${t.where}`):(n.push(` WHERE ${t.where}`),n.forEach((h,p)=>{h.startsWith("SELECT")&&(n[p]=this.selectFromTableFragment(t,i,s.main,l.quotedName,l.as,t.where))})))),t.group&&(t.group=Array.isArray(t.group)?t.group.map(h=>this.aliasGrouping(h,i,l.as,t)).join(", "):this.aliasGrouping(t.group,i,l.as,t),u&&t.group?a.push(` GROUP BY ${t.group}`):t.group&&n.push(` GROUP BY ${t.group}`)),Object.prototype.hasOwnProperty.call(t,"having")&&(t.having=this.getWhereConditions(t.having,e,i,t,!1),t.having&&(u?a.push(` HAVING ${t.having}`):n.push(` HAVING ${t.having}`))),t.order){const h=this.getQueryOrders(t,i,u);h.mainQueryOrder.length&&n.push(` ORDER BY ${h.mainQueryOrder.join(", ")}`),h.subQueryOrder.length&&a.push(` ORDER BY ${h.subQueryOrder.join(", ")}`)}const y=this.addLimitAndOffset(t,l.model);if(y&&!t.groupedLimit&&(u?a.push(y):n.push(y)),u?(this._throwOnEmptyAttributes(s.main,{modelName:i&&i.name,as:l.as}),m=`SELECT ${s.main.join(", ")} FROM (${a.join("")}) AS ${l.as}${g.join("")}${n.join("")}`):m=n.join(""),t.lock&&this._dialect.supports.lock){let h=t.lock;typeof t.lock=="object"&&(h=t.lock.level),this._dialect.supports.lockKey&&(h==="KEY SHARE"||h==="NO KEY UPDATE")?m+=` FOR ${h}`:h==="SHARE"?m+=` ${this._dialect.supports.forShare}`:m+=" FOR UPDATE",this._dialect.supports.lockOf&&t.lock.of&&t.lock.of.prototype instanceof j&&(m+=` OF ${this.quoteTable(t.lock.of.name)}`),this._dialect.supports.skipLocked&&t.skipLocked&&(m+=" SKIP LOCKED")}return`${m};`}aliasGrouping(e,t,i,r){const n=Array.isArray(e)?e[0]:e;return this.quote(this._getAliasForField(i,n,r)||n,t)}escapeAttributes(e,t,i){return e&&e.map(r=>{let n=!0;if(r instanceof d.SequelizeMethod)return this.handleSequelizeMethod(r);if(Array.isArray(r)){if(r.length!==2)throw new Error(`${JSON.stringify(r)} is not a valid attribute definition. Please use the following format: ['attribute definition', 'alias']`);r=r.slice(),r[0]instanceof d.SequelizeMethod?(r[0]=this.handleSequelizeMethod(r[0]),n=!1):!r[0].includes("(")&&!r[0].includes(")")?r[0]=this.quoteIdentifier(r[0]):k.noRawAttributes();let a=r[1];this.options.minifyAliases&&(a=this._getMinifiedAlias(a,i,t)),r=[r[0],this.quoteIdentifier(a)].join(" AS ")}else r=!r.includes(d.TICK_CHAR)&&!r.includes('"')?this.quoteAttribute(r,t.model):this.escape(r);return!$.isEmpty(t.include)&&(!r.includes(".")||t.dotNotation)&&n&&(r=`${i}.${r}`),r})}generateInclude(e,t,i){const r={mainQuery:[],subQuery:[]},n=[],a=[];let u=!1;const s={internalAs:e.as,externalAs:e.as},l={main:[],subQuery:[]};let o;if(i.options.keysEscaped=!0,i.names.name!==t.externalAs&&i.names.as!==t.externalAs&&(s.internalAs=`${t.internalAs}->${e.as}`,s.externalAs=`${t.externalAs}.${e.as}`),i.options.includeIgnoreAttributes!==!1){e.model._expandAttributes(e),d.mapFinderOptions(e,e.model);const g=e.attributes.map(f=>{let m=f,y=!1;if(Array.isArray(f)&&f.length===2&&(f[0]instanceof d.SequelizeMethod&&(f[0]instanceof d.Literal||f[0]instanceof d.Cast||f[0]instanceof d.Fn)&&(y=!0),f=f.map(A=>A instanceof d.SequelizeMethod?this.handleSequelizeMethod(A):A),m=f[1],f=f[0]),f instanceof d.Literal)return f.val;if(f instanceof d.Cast||f instanceof d.Fn)throw new Error("Tried to select attributes using Sequelize.cast or Sequelize.fn without specifying an alias for the result, during eager loading. This means the attribute will not be added to the returned instance");let h;y===!0?h=f:/#>>|->>/.test(f)?h=`(${this.quoteIdentifier(s.internalAs)}.${f.replace(/\(|\)/g,"")})`:/json_extract\(/.test(f)?h=f.replace(/json_extract\(/i,`json_extract(${this.quoteIdentifier(s.internalAs)}.`):h=`${this.quoteIdentifier(s.internalAs)}.${this.quoteIdentifier(f)}`;let p=`${s.externalAs}.${m}`;return this.options.minifyAliases&&(p=this._getMinifiedAlias(p,s.internalAs,i.options)),d.joinSQLFragments([h,"AS",this.quoteIdentifier(p,!0)])});if(e.subQuery&&i.subQuery)for(const f of g)l.subQuery.push(f);else for(const f of g)l.main.push(f)}if(e.through?o=this.generateThroughJoin(e,s,t.internalAs,i):(this._generateSubQueryFilter(e,s,i),o=this.generateJoin(e,i)),o.attributes.main.length>0&&(l.main=l.main.concat(o.attributes.main)),o.attributes.subQuery.length>0&&(l.subQuery=l.subQuery.concat(o.attributes.subQuery)),e.include)for(const g of e.include){if(g.separate||g._pseudo)continue;const f=this.generateInclude(g,s,i);e.required===!1&&g.required===!0&&(u=!0),g.subQuery&&i.subQuery&&a.push(f.subQuery),f.mainQuery&&n.push(f.mainQuery),f.attributes.main.length>0&&(l.main=l.main.concat(f.attributes.main)),f.attributes.subQuery.length>0&&(l.subQuery=l.subQuery.concat(f.attributes.subQuery))}return e.subQuery&&i.subQuery?(u&&a.length>0?r.subQuery.push(` ${o.join} ( ${o.body}${a.join("")} ) ON ${o.condition}`):(r.subQuery.push(` ${o.join} ${o.body} ON ${o.condition}`),a.length>0&&r.subQuery.push(a.join(""))),r.mainQuery.push(n.join(""))):(u&&n.length>0?r.mainQuery.push(` ${o.join} ( ${o.body}${n.join("")} ) ON ${o.condition}`):(r.mainQuery.push(` ${o.join} ${o.body} ON ${o.condition}`),n.length>0&&r.mainQuery.push(n.join(""))),r.subQuery.push(a.join(""))),{mainQuery:r.mainQuery.join(""),subQuery:r.subQuery.join(""),attributes:l}}_getMinifiedAlias(e,t,i){if(i.aliasesByTable[`${t}${e}`])return i.aliasesByTable[`${t}${e}`];if(e.match(/subquery_order_[0-9]/))return e;const r=`_${i.aliasesMapping.size}`;return i.aliasesMapping.set(r,e),i.aliasesByTable[`${t}${e}`]=r,r}_getAliasForField(e,t,i){return this.options.minifyAliases&&i.aliasesByTable[`${e}${t}`]?i.aliasesByTable[`${e}${t}`]:null}generateJoin(e,t){const i=e.association,r=e.parent,n=!!r&&!e.parent.association&&e.parent.model.name===t.options.model.name;let a,u;const s=i.source,l=i instanceof P?i.identifier:i.sourceKeyAttribute||s.primaryKeyAttribute,o=i instanceof P?i.identifierField:s.rawAttributes[i.sourceKeyAttribute||s.primaryKeyAttribute].field;let g;const f=e.model,m=f.getTableName(),y=i instanceof P?f.rawAttributes[i.targetIdentifier||f.primaryKeyAttribute].field:i.identifierField;let h=e.as;for(;(a=a&&a.parent||e.parent)&&a.association;)g?g=`${a.as}->${g}`:g=a.as;g?h=`${g}->${h}`:g=r.as||r.model.name;let p=`${this.quoteTable(g)}.${this.quoteIdentifier(o)}`;const A=[];if(t.options.groupedLimit&&n||t.subQuery&&e.parent.subQuery&&!e.subQuery)if(n){const I=this.quoteTable(r.as||r.model.name);if(p=this._getAliasForField(I,l,t.options)||`${I}.${this.quoteIdentifier(l)}`,t.subQuery){const E=`${I}.${this.quoteIdentifier(o)}`;A.push(E!==p?`${E} AS ${this.quoteIdentifier(l)}`:E)}}else{const I=`${g.replace(/->/g,".")}.${l}`;p=this._getAliasForField(g,I,t.options)||this.quoteIdentifier(I)}if(p+=` = ${this.quoteIdentifier(h)}.${this.quoteIdentifier(y)}`,e.on&&(p=this.whereItemsQuery(e.on,{prefix:this.sequelize.literal(this.quoteIdentifier(h)),model:e.model})),e.where&&(u=this.whereItemsQuery(e.where,{prefix:this.sequelize.literal(this.quoteIdentifier(h)),model:e.model}),u&&(e.or?p+=` OR ${u}`:p+=` AND ${u}`)),this.options.minifyAliases&&h.length>63){const I=`%${t.options.includeAliases.size}`;t.options.includeAliases.set(I,h)}return{join:e.required?"INNER JOIN":e.right&&this._dialect.supports["RIGHT JOIN"]?"RIGHT OUTER JOIN":"LEFT OUTER JOIN",body:this.quoteTable(m,h),condition:p,attributes:{main:[],subQuery:A}}}generateReturnValues(e,t){const i=[],r=[];let n="",a="",u="";return Array.isArray(t.returning)?i.push(...t.returning.map(s=>this.quoteIdentifier(s))):e&&$.each(e,s=>{s.type instanceof C.VIRTUAL||(i.push(this.quoteIdentifier(s.field)),r.push(s.type))}),$.isEmpty(i)&&i.push("*"),this._dialect.supports.returnValues.returning?a=` RETURNING ${i.join(",")}`:this._dialect.supports.returnValues.output&&(n=` OUTPUT ${i.map(s=>`INSERTED.${s}`).join(",")}`,t.hasTrigger&&this._dialect.supports.tmpTableTrigger&&(u=`DECLARE @tmp TABLE (${i.map((l,o)=>`${l} ${r[o].toSql()}`).join(",")}); `,n+=" INTO @tmp",a="; SELECT * FROM @tmp")),{outputFragment:n,returnFields:i,returningFragment:a,tmpTable:u}}generateThroughJoin(e,t,i,r){const n=e.through,a=n.model.getTableName(),u=`${t.internalAs}->${n.as}`,s=`${t.externalAs}.${n.as}`,l=n.attributes.map(T=>{let D=`${s}.${Array.isArray(T)?T[1]:T}`;return this.options.minifyAliases&&(D=this._getMinifiedAlias(D,u,r.options)),d.joinSQLFragments([`${this.quoteIdentifier(u)}.${this.quoteIdentifier(Array.isArray(T)?T[0]:T)}`,"AS",this.quoteIdentifier(D)])}),o=e.association,g=!e.parent.association&&e.parent.model.name===r.options.model.name,f=i,m=o.identifierField,y=t.internalAs,h=o.foreignIdentifierField,p=o.targetKeyField,A=e.required?"INNER JOIN":e.right&&this._dialect.supports["RIGHT JOIN"]?"RIGHT OUTER JOIN":"LEFT OUTER JOIN";let I,E;const S={main:[],subQuery:[]};let _=o.sourceKey,q,b,O,Q;if(r.options.includeIgnoreAttributes!==!1)for(const T of l)S.main.push(T);if(r.subQuery||(_=o.sourceKeyField),r.subQuery&&!e.subQuery&&!e.parent.subQuery&&e.parent.model!==r.options.mainModel&&(_=o.sourceKeyField),r.subQuery&&!e.subQuery&&e.parent.subQuery&&!g){const T=this._getAliasForField(f,`${f}.${_}`,r.options)||`${f}.${_}`;q=`${this.quoteIdentifier(T)} = `}else{const T=this._getAliasForField(f,_,r.options)||_;q=`${this.quoteTable(f)}.${this.quoteIdentifier(T)} = `}return q+=`${this.quoteIdentifier(u)}.${this.quoteIdentifier(m)}`,b=`${this.quoteIdentifier(y)}.${this.quoteIdentifier(p)} = `,b+=`${this.quoteIdentifier(u)}.${this.quoteIdentifier(h)}`,n.where&&(O=this.getWhereConditions(n.where,this.sequelize.literal(this.quoteIdentifier(u)),n.model)),I=`( ${this.quoteTable(a,u)} INNER JOIN ${this.quoteTable(e.model.getTableName(),t.internalAs)} ON ${b}`,O&&(I+=` AND ${O}`),I+=")",E=q,(e.where||e.through.where)&&e.where&&(Q=this.getWhereConditions(e.where,this.sequelize.literal(this.quoteIdentifier(t.internalAs)),e.model,r.options),Q&&(E+=` AND ${Q}`)),this._generateSubQueryFilter(e,t,r),{join:A,body:I,condition:E,attributes:S}}_generateSubQueryFilter(e,t,i){if(!i.subQuery||!e.subQueryFilter)return;i.options.where||(i.options.where={});let r=e,n=e,a=this._getRequiredClosure(e).include,u;for(;r=r.parent;){if(r.parent&&!r.required||r.subQueryFilter)return;a=[M(N({},n),{include:a,attributes:[]})],n=r}const s=a[0],l=s.parent,o=s.association;if(s.association=void 0,s.through&&Object(s.through.model)===s.through.model)u=this.selectQuery(s.through.model.getTableName(),{attributes:[s.through.model.primaryKeyField],include:j._validateIncludedElements({model:s.through.model,include:[{association:o.toTarget,required:!0,where:s.where,include:s.include}]}).include,model:s.through.model,where:{[c.and]:[this.sequelize.literal([`${this.quoteTable(l.model.name)}.${this.quoteIdentifier(l.model.primaryKeyField)}`,`${this.quoteIdentifier(s.through.model.name)}.${this.quoteIdentifier(o.identifierField)}`].join(" = ")),s.through.where]},limit:1,includeIgnoreAttributes:!1},s.through.model);else{const g=o.associationType==="BelongsTo",f=g?o.identifierField:o.sourceKeyField||l.model.primaryKeyField,m=g?o.sourceKeyField||s.model.primaryKeyField:o.identifierField,y=[`${this.quoteIdentifier(s.as)}.${this.quoteIdentifier(m)}`,`${this.quoteTable(l.as||l.model.name)}.${this.quoteIdentifier(f)}`].join(" = ");u=this.selectQuery(s.model.getTableName(),{attributes:[m],include:j._validateIncludedElements(s).include,model:s.model,where:{[c.and]:[s.where,{[c.join]:this.sequelize.literal(y)}]},limit:1,tableAs:s.as,includeIgnoreAttributes:!1},s.model)}i.options.where[c.and]||(i.options.where[c.and]=[]),i.options.where[`__${t.internalAs}`]=this.sequelize.literal(["(",u.replace(/;$/,""),")","IS NOT NULL"].join(" "))}_getRequiredClosure(e){const t=M(N({},e),{attributes:[],include:[]});return Array.isArray(e.include)&&(t.include=e.include.filter(i=>i.required).map(i=>this._getRequiredClosure(i))),t}getQueryOrders(e,t,i){const r=[],n=[];if(Array.isArray(e.order))for(let a of e.order){if(Array.isArray(a)||(a=[a]),i&&Array.isArray(a)&&a[0]&&!(a[0]instanceof F)&&!(typeof a[0]=="function"&&a[0].prototype instanceof j)&&!(typeof a[0].model=="function"&&a[0].model.prototype instanceof j)&&!(typeof a[0]=="string"&&t&&t.associations!==void 0&&t.associations[a[0]])&&n.push(this.quote(a,t,"->")),i){const u=e.attributes.find(s=>Array.isArray(s)&&s[0]===a[0]&&s[1]);if(u){const s=this.quoteIdentifier(t.name);a[0]=new d.Col(this._getAliasForField(s,u[1],e)||u[1])}}r.push(this.quote(a,t,"->"))}else if(e.order instanceof d.SequelizeMethod){const a=this.quote(e.order,t,"->");i&&n.push(a),r.push(a)}else throw new Error("Order must be type of array or instance of a valid sequelize method.");return{mainQueryOrder:r,subQueryOrder:n}}_throwOnEmptyAttributes(e,t={}){if(e.length>0)return;const i=t.as&&`as ${t.as}`||"",n=`Attempted a SELECT query ${t.modelName&&`for model '${t.modelName}'`||""} ${i} without selecting any columns`;throw new U.QueryError(n.replace(/ +/g," "))}selectFromTableFragment(e,t,i,r,n){this._throwOnEmptyAttributes(i,{modelName:t&&t.name,as:n});let a=`SELECT ${i.join(", ")} FROM ${r}`;if(n&&(a+=` AS ${n}`),e.indexHints&&this._dialect.supports.indexHints)for(const u of e.indexHints)B[u.type]&&(a+=` ${B[u.type]} INDEX (${u.values.map(s=>this.quoteIdentifiers(s)).join(",")})`);return a}addLimitAndOffset(e){let t="";return e.offset!=null&&e.limit==null?t+=" LIMIT "+this.escape(e.offset)+", "+1e13:e.limit!=null&&(e.offset!=null?t+=" LIMIT "+this.escape(e.offset)+", "+this.escape(e.limit):t+=" LIMIT "+this.escape(e.limit)),t}handleSequelizeMethod(e,t,i,r,n){let a;if(Object.prototype.hasOwnProperty.call(this.OperatorMap,e.comparator)&&(e.comparator=this.OperatorMap[e.comparator]),e instanceof d.Where){let u=e.logic,s;return e.attribute instanceof d.SequelizeMethod?s=this.getWhereConditions(e.attribute,t,i,r,n):s=`${this.quoteTable(e.attribute.Model.name)}.${this.quoteIdentifier(e.attribute.field||e.attribute.fieldName)}`,u&&u instanceof d.SequelizeMethod?(u=this.getWhereConditions(u,t,i,r,n),u==="NULL"&&(e.comparator==="="&&(e.comparator="IS"),e.comparator==="!="&&(e.comparator="IS NOT")),[s,u].join(` ${e.comparator} `)):$.isPlainObject(u)?this.whereItemQuery(e.attribute,u,{model:i}):([this.OperatorMap[c.between],this.OperatorMap[c.notBetween]].includes(e.comparator)?u=`${this.escape(u[0])} AND ${this.escape(u[1])}`:typeof u=="boolean"?u=this.booleanValue(u):u=this.escape(u),u==="NULL"&&(e.comparator==="="&&(e.comparator="IS"),e.comparator==="!="&&(e.comparator="IS NOT")),[s,u].join(` ${e.comparator} `))}if(e instanceof d.Literal)return e.val;if(e instanceof d.Cast)return e.val instanceof d.SequelizeMethod?a=this.handleSequelizeMethod(e.val,t,i,r,n):$.isPlainObject(e.val)?a=this.whereItemsQuery(e.val):a=this.escape(e.val),`CAST(${a} AS ${e.type.toUpperCase()})`;if(e instanceof d.Fn)return`${e.fn}(${e.args.map(u=>u instanceof d.SequelizeMethod?this.handleSequelizeMethod(u,t,i,r,n):$.isPlainObject(u)?this.whereItemsQuery(u):this.escape(typeof u=="string"?u.replace("$","$$$"):u)).join(", ")})`;if(e instanceof d.Col){if(Array.isArray(e.col)&&!i)throw new Error("Cannot call Sequelize.col() with array outside of order / group clause");return e.col.startsWith("*")?"*":this.quote(e.col,i)}return e.toString(this,i)}whereQuery(e,t){const i=this.whereItemsQuery(e,t);return i&&i.length?`WHERE ${i}`:""}whereItemsQuery(e,t,i){if(e==null||d.getComplexSize(e)===0)return"";if(typeof e=="string")throw new Error("Support for `{where: 'raw query'}` has been removed.");const r=[];return i=i||"AND",i[0]!==" "&&(i=` ${i} `),$.isPlainObject(e)?d.getComplexKeys(e).forEach(n=>{const a=e[n];r.push(this.whereItemQuery(n,a,t))}):r.push(this.whereItemQuery(void 0,e,t)),r.length&&r.filter(n=>n&&n.length).join(i)||""}whereItemQuery(e,t,i={}){if(t===void 0)throw new Error(`WHERE parameter "${e}" has invalid "undefined" value`);if(typeof e=="string"&&e.includes(".")&&i.model){const o=e.split(".");if(i.model.rawAttributes[o[0]]&&i.model.rawAttributes[o[0]].type instanceof C.JSON){const g={},f=i.model.rawAttributes[o[0]];return $.set(g,o.slice(1),t),this.whereItemQuery(f.field||o[0],g,N({field:f},i))}}const r=this._findField(e,i),n=r&&r.type||i.type,a=$.isPlainObject(t),u=!a&&Array.isArray(t);e=this.OperatorsAliasMap&&this.OperatorsAliasMap[e]||e,a&&(t=this._replaceAliases(t));const s=a&&d.getComplexKeys(t);if(e===void 0){if(typeof t=="string")return t;if(a&&s.length===1)return this.whereItemQuery(s[0],t[s[0]],i)}if(t===null){const o=i.bindParam?"NULL":this.escape(t,r);return this._joinKeyValue(e,o,this.OperatorMap[c.is],i.prefix)}if(!t){const o=i.bindParam?this.format(t,r,i,i.bindParam):this.escape(t,r);return this._joinKeyValue(e,o,this.OperatorMap[c.eq],i.prefix)}if(t instanceof d.SequelizeMethod&&!(e!==void 0&&t instanceof d.Fn))return this.handleSequelizeMethod(t);if(e===void 0&&u)if(d.canTreatArrayAsAnd(t))e=c.and;else throw new Error("Support for literal replacements in the `where` object has been removed.");if(e===c.or||e===c.and||e===c.not)return this._whereGroupBind(e,t,i);if(t[c.or])return this._whereBind(this.OperatorMap[c.or],e,t[c.or],i);if(t[c.and])return this._whereBind(this.OperatorMap[c.and],e,t[c.and],i);if(u&&n instanceof C.ARRAY){const o=i.bindParam?this.format(t,r,i,i.bindParam):this.escape(t,r);return this._joinKeyValue(e,o,this.OperatorMap[c.eq],i.prefix)}if(a&&n instanceof C.JSON&&i.json!==!1)return this._whereJSON(e,t,i);if(a&&s.length>1)return this._whereBind(this.OperatorMap[c.and],e,t,i);if(u)return this._whereParseSingleValueObject(e,r,c.in,t,i);if(a)return this.OperatorMap[s[0]]?this._whereParseSingleValueObject(e,r,s[0],t[s[0]],i):this._whereParseSingleValueObject(e,r,this.OperatorMap[c.eq],t,i);if(e===c.placeholder){const o=i.bindParam?this.format(t,r,i,i.bindParam):this.escape(t,r);return this._joinKeyValue(this.OperatorMap[e],o,this.OperatorMap[c.eq],i.prefix)}const l=i.bindParam?this.format(t,r,i,i.bindParam):this.escape(t,r);return this._joinKeyValue(e,l,this.OperatorMap[c.eq],i.prefix)}_findField(e,t){if(t.field)return t.field;if(t.model&&t.model.rawAttributes&&t.model.rawAttributes[e])return t.model.rawAttributes[e];if(t.model&&t.model.fieldRawAttributesMap&&t.model.fieldRawAttributesMap[e])return t.model.fieldRawAttributesMap[e]}_whereGroupBind(e,t,i){const r=e===c.or?this.OperatorMap[c.or]:this.OperatorMap[c.and],n=e===c.not?"NOT ":"";return Array.isArray(t)?(t=t.map(a=>{let u=this.whereItemsQuery(a,i,this.OperatorMap[c.and]);return u&&u.length&&(Array.isArray(a)||$.isPlainObject(a))&&d.getComplexSize(a)>1&&(u=`(${u})`),u}).filter(a=>a&&a.length),t=t.length&&t.join(r)):t=this.whereItemsQuery(t,i,r),(e===c.or||e===c.not)&&!t?"0 = 1":t?`${n}(${t})`:void 0}_whereBind(e,t,i,r){return $.isPlainObject(i)?i=d.getComplexKeys(i).map(n=>{const a=i[n];return this.whereItemQuery(t,{[n]:a},r)}):i=i.map(n=>this.whereItemQuery(t,n,r)),i=i.filter(n=>n&&n.length),i.length?`(${i.join(e)})`:void 0}_whereJSON(e,t,i){const r=[];let n=this.quoteIdentifier(e);i.prefix&&(i.prefix instanceof d.Literal?n=`${this.handleSequelizeMethod(i.prefix)}.${n}`:n=`${this.quoteTable(i.prefix)}.${n}`),d.getOperators(t).forEach(u=>{const s={[u]:t[u]};r.push(this.whereItemQuery(e,s,M(N({},i),{json:!1})))}),$.forOwn(t,(u,s)=>{this._traverseJSON(r,n,s,u,[s])});const a=r.join(this.OperatorMap[c.and]);return r.length>1?`(${a})`:a}_traverseJSON(e,t,i,r,n){let a;if(n[n.length-1].includes("::")){const s=n[n.length-1].split("::");a=s[1],n[n.length-1]=s[0]}const u=this.jsonPathExtractionQuery(t,n);if($.isPlainObject(r)){d.getOperators(r).forEach(s=>{const l=this._toJSONValue(r[s]);e.push(this.whereItemQuery(this._castKey(u,l,a),{[s]:l}))}),$.forOwn(r,(s,l)=>{this._traverseJSON(e,t,l,s,n.concat([l]))});return}r=this._toJSONValue(r),e.push(this.whereItemQuery(this._castKey(u,r,a),{[c.eq]:r}))}_toJSONValue(e){return e}_castKey(e,t,i,r){return i=i||this._getJsonCast(Array.isArray(t)?t[0]:t),i?new d.Literal(this.handleSequelizeMethod(new d.Cast(new d.Literal(e),i,r))):new d.Literal(e)}_getJsonCast(e){if(typeof e=="number")return"double precision";if(e instanceof Date)return"timestamptz";if(typeof e=="boolean")return"boolean"}_joinKeyValue(e,t,i,r){if(!e)return t;if(i===void 0)throw new Error(`${e} and ${t} has no comparator`);return e=this._getSafeKey(e,r),[e,t].join(` ${i} `)}_getSafeKey(e,t){return e instanceof d.SequelizeMethod?(e=this.handleSequelizeMethod(e),this._prefixKey(this.handleSequelizeMethod(e),t)):d.isColString(e)?(e=e.substr(1,e.length-2).split("."),e.length>2&&(e=[e.slice(0,-1).join("->"),e[e.length-1]]),e.map(i=>this.quoteIdentifier(i)).join(".")):this._prefixKey(this.quoteIdentifier(e),t)}_prefixKey(e,t){return t?t instanceof d.Literal?[this.handleSequelizeMethod(t),e].join("."):[this.quoteTable(t),e].join("."):e}_whereParseSingleValueObject(e,t,i,r,n){i===c.not&&(Array.isArray(r)?i=c.notIn:r!==null&&r!==!0&&r!==!1&&(i=c.ne));let a=this.OperatorMap[i]||this.OperatorMap[c.eq];switch(i){case c.in:case c.notIn:return r instanceof d.Literal?this._joinKeyValue(e,r.val,a,n.prefix):r.length?this._joinKeyValue(e,`(${r.map(l=>this.escape(l,t)).join(", ")})`,a,n.prefix):a===this.OperatorMap[c.in]?this._joinKeyValue(e,"(NULL)",a,n.prefix):"";case c.any:case c.all:return a=`${this.OperatorMap[c.eq]} ${a}`,r[c.values]?this._joinKeyValue(e,`(VALUES ${r[c.values].map(l=>`(${this.escape(l)})`).join(", ")})`,a,n.prefix):this._joinKeyValue(e,`(${this.escape(r,t)})`,a,n.prefix);case c.between:case c.notBetween:return this._joinKeyValue(e,`${this.escape(r[0],t)} AND ${this.escape(r[1],t)}`,a,n.prefix);case c.raw:throw new Error("The `$raw` where property is no longer supported.  Use `sequelize.literal` instead.");case c.col:return a=this.OperatorMap[c.eq],r=r.split("."),r.length>2&&(r=[r.slice(0,-1).join("->"),r[r.length-1]]),this._joinKeyValue(e,r.map(l=>this.quoteIdentifier(l)).join("."),a,n.prefix);case c.startsWith:case c.endsWith:case c.substring:a=this.OperatorMap[c.like],r instanceof d.Literal&&(r=r.val);let s=`${r}%`;return i===c.endsWith&&(s=`%${r}`),i===c.substring&&(s=`%${r}%`),this._joinKeyValue(e,this.escape(s),a,n.prefix)}const u={acceptStrings:a.includes(this.OperatorMap[c.like])};if($.isPlainObject(r)){if(r[c.col])return this._joinKeyValue(e,this.whereItemQuery(null,r),a,n.prefix);if(r[c.any])return u.isList=!0,this._joinKeyValue(e,`(${this.escape(r[c.any],t,u)})`,`${a} ${this.OperatorMap[c.any]}`,n.prefix);if(r[c.all])return u.isList=!0,this._joinKeyValue(e,`(${this.escape(r[c.all],t,u)})`,`${a} ${this.OperatorMap[c.all]}`,n.prefix)}return r===null&&a===this.OperatorMap[c.eq]?this._joinKeyValue(e,this.escape(r,t,u),this.OperatorMap[c.is],n.prefix):r===null&&a===this.OperatorMap[c.ne]?this._joinKeyValue(e,this.escape(r,t,u),this.OperatorMap[c.not],n.prefix):this._joinKeyValue(e,this.escape(r,t,u),a,n.prefix)}getWhereConditions(e,t,i,r,n){const a={};if(Array.isArray(t)&&(t=t[0],Array.isArray(t)&&(t=t[1])),r=r||{},n===void 0&&(n=!0),e&&e instanceof d.SequelizeMethod)return this.handleSequelizeMethod(e,t,i,r,n);if($.isPlainObject(e))return this.whereItemsQuery(e,{model:i,prefix:n&&t,type:r.type});if(typeof e=="number"){let u=i?Object.keys(i.primaryKeys):[];return u.length>0?u=u[0]:u="id",a[u]=e,this.whereItemsQuery(a,{model:i,prefix:n&&t})}if(typeof e=="string")return this.whereItemsQuery(e,{model:i,prefix:n&&t});if(Buffer.isBuffer(e))return this.escape(e);if(Array.isArray(e)){if(e.length===0||e.length>0&&e[0].length===0)return"1=1";if(d.canTreatArrayAsAnd(e)){const u={[c.and]:e};return this.getWhereConditions(u,t,i,r,n)}throw new Error("Support for literal replacements in the `where` object has been removed.")}return e===null?this.whereItemsQuery(e,{model:i,prefix:n&&t}):"1=1"}parseConditionObject(e,t){return t=t||[],$.reduce(e,(i,r,n)=>$.isObject(r)?i.concat(this.parseConditionObject(r,t.concat(n))):(i.push({path:t.concat(n),value:r}),i),[])}booleanValue(e){return e}}L(R,"QueryGenerator"),Object.assign(R.prototype,require("./query-generator/operators")),Object.assign(R.prototype,require("./query-generator/transaction")),module.exports=R;
//# sourceMappingURL=query-generator.js.map
