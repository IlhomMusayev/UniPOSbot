"use strict";var _=Object.defineProperty;var V=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var p=(o,t,s)=>t in o?_(o,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[t]=s,w=(o,t)=>{for(var s in t||(t={}))E.call(t,s)&&p(o,s,t[s]);if(V)for(var s of V(t))b.call(t,s)&&p(o,s,t[s]);return o};var y=(o,t)=>_(o,"name",{value:t,configurable:!0});const c=require("lodash"),A=require("./utils"),u=require("./errors"),g=require("./data-types"),P=require("./associations/belongs-to"),I=require("./utils/validator-extras").validator,{promisify:k}=require("util");class l{constructor(t,s){s=w({hooks:!0},s),s.fields&&!s.skip?s.skip=c.difference(Object.keys(t.constructor.rawAttributes),s.fields):s.skip=s.skip||[],this.options=s,this.modelInstance=t,this.validator=I,this.errors=[],this.inProgress=!1}async _validate(){if(this.inProgress)throw new Error("Validations already in progress.");if(this.inProgress=!0,await Promise.all([this._perAttributeValidators(),this._customValidators()]),this.errors.length)throw new u.ValidationError(null,this.errors)}async validate(){return await(this.options.hooks?this._validateAndRunHooks():this._validate())}async _validateAndRunHooks(){const t=this.modelInstance.constructor.runHooks.bind(this.modelInstance.constructor);await t("beforeValidate",this.modelInstance,this.options);try{await this._validate()}catch(s){throw await t("validationFailed",this.modelInstance,this.options,s)||s}return await t("afterValidate",this.modelInstance,this.options),this.modelInstance}async _perAttributeValidators(){const t=[];return c.forIn(this.modelInstance.rawAttributes,(s,i)=>{if(this.options.skip.includes(i))return;const r=this.modelInstance.dataValues[i];r instanceof A.SequelizeMethod||(!s._autoGenerated&&!s.autoIncrement&&this._validateSchema(s,i,r),Object.prototype.hasOwnProperty.call(this.modelInstance.validators,i)&&t.push(this._singleAttrValidate(r,i,s.allowNull)))}),await Promise.all(t)}async _customValidators(){const t=[];return c.each(this.modelInstance.constructor.options.validate,(s,i)=>{if(this.options.skip.includes(i))return;const r=this._invokeCustomValidator(s,i).catch(()=>{});t.push(r)}),await Promise.all(t)}async _singleAttrValidate(t,s,i){if(t==null&&!i)return;const r=[];return c.forIn(this.modelInstance.validators[s],(n,e)=>{if((e==="isUrl"||e==="isURL"||e==="isEmail")&&(typeof n=="object"&&n!==null&&n.msg?n={msg:n.msg}:n===!0&&(n={})),typeof n=="function"){r.push(this._invokeCustomValidator(n,e,!0,t,s));return}if(t==null)return;const a=this._invokeBuiltinValidator(t,n,e,s);a.catch(()=>{}),r.push(a)}),Promise.all(r.map(n=>n.catch(e=>{const a=!!e.validatorName;this._pushError(a,s,e,t,e.validatorName,e.validatorArgs)})))}async _invokeCustomValidator(t,s,i,r,n){let e=!1;const a=t.length;let h=1,d=s,m;if(i&&(h=2,m=r,d=n),a===h&&(e=!0),e)try{return i?await k(t.bind(this.modelInstance,m))():await k(t.bind(this.modelInstance))()}catch(f){return this._pushError(!1,d,f,r,s)}try{return await t.call(this.modelInstance,m)}catch(f){return this._pushError(!1,d,f,r,s)}}async _invokeBuiltinValidator(t,s,i,r){const n=String(t);if(typeof I[i]!="function")throw new Error(`Invalid validator function: ${i}`);const e=this._extractValidatorArgs(s,i,r);if(!I[i](n,...e))throw Object.assign(new Error(s.msg||`Validation ${i} on ${r} failed`),{validatorName:i,validatorArgs:e})}_extractValidatorArgs(t,s,i){let r=t.args||t;const n=typeof r!="string"&&(s==="isAlpha"||s==="isAlphanumeric"||s==="isMobilePhone");return Array.isArray(r)?r=r.slice(0):s==="isImmutable"?r=[r,i,this.modelInstance]:n||s==="isIP"?r=[]:r=[r],r}_validateSchema(t,s,i){if(t.allowNull===!1&&i==null){const r=Object.values(this.modelInstance.constructor.associations).find(n=>n instanceof P&&n.foreignKey===t.fieldName);if(!r||!this.modelInstance.get(r.associationAccessor)){const n=this.modelInstance.validators[s],e=c.get(n,"notNull.msg",`${this.modelInstance.constructor.name}.${s} cannot be null`);this.errors.push(new u.ValidationErrorItem(e,"notNull Violation",s,i,this.modelInstance,"is_null"))}}(t.type instanceof g.STRING||t.type instanceof g.TEXT||t.type instanceof g.CITEXT)&&(Array.isArray(i)||c.isObject(i)&&!(i instanceof A.SequelizeMethod)&&!Buffer.isBuffer(i))&&this.errors.push(new u.ValidationErrorItem(`${s} cannot be an array or an object`,"string violation",s,i,this.modelInstance,"not_a_string"))}_pushError(t,s,i,r,n,e){const a=i.message||i||"Validation error",h=new u.ValidationErrorItem(a,"Validation error",s,r,this.modelInstance,n,t?n:void 0,t?e:void 0);h[l.RAW_KEY_NAME]=i,this.errors.push(h)}}y(l,"InstanceValidator"),l.RAW_KEY_NAME="original",module.exports=l,module.exports.InstanceValidator=l,module.exports.default=l;
//# sourceMappingURL=instance-validator.js.map
