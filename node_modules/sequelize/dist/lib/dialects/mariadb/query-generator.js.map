{
  "version": 3,
  "sources": ["../../../../lib/dialects/mariadb/query-generator.js"],
  "sourcesContent": ["'use strict';\n\nconst MySQLQueryGenerator = require('../mysql/query-generator');\nconst Utils = require('./../../utils');\n\nclass MariaDBQueryGenerator extends MySQLQueryGenerator {\n  createSchema(schema, options) {\n    options = {\n      charset: null,\n      collate: null,\n      ...options\n    };\n\n    return Utils.joinSQLFragments([\n      'CREATE SCHEMA IF NOT EXISTS',\n      this.quoteIdentifier(schema),\n      options.charset && `DEFAULT CHARACTER SET ${this.escape(options.charset)}`,\n      options.collate && `DEFAULT COLLATE ${this.escape(options.collate)}`,\n      ';'\n    ]);\n  }\n\n  dropSchema(schema) {\n    return `DROP SCHEMA IF EXISTS ${this.quoteIdentifier(schema)};`;\n  }\n\n  showSchemasQuery(options) {\n    const schemasToSkip = [\n      '\\'MYSQL\\'',\n      '\\'INFORMATION_SCHEMA\\'',\n      '\\'PERFORMANCE_SCHEMA\\''\n    ];\n    if (options.skip && Array.isArray(options.skip) && options.skip.length > 0) {\n      for (const schemaName of options.skip) {\n        schemasToSkip.push(this.escape(schemaName));\n      }\n    }\n    return Utils.joinSQLFragments([\n      'SELECT SCHEMA_NAME as schema_name',\n      'FROM INFORMATION_SCHEMA.SCHEMATA',\n      `WHERE SCHEMA_NAME NOT IN (${schemasToSkip.join(', ')})`,\n      ';'\n    ]);\n  }\n\n  showTablesQuery(database) {\n    let query = 'SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = \\'BASE TABLE\\'';\n    if (database) {\n      query += ` AND TABLE_SCHEMA = ${this.escape(database)}`;\n    } else {\n      query += ' AND TABLE_SCHEMA NOT IN (\\'MYSQL\\', \\'INFORMATION_SCHEMA\\', \\'PERFORMANCE_SCHEMA\\')';\n    }\n    return `${query};`;\n  }\n}\n\nmodule.exports = MariaDBQueryGenerator;\n"],
  "mappings": "yZAEA,KAAM,GAAsB,QAAQ,4BAC9B,EAAQ,QAAQ,iBAEtB,eAAoC,EAAoB,CACtD,aAAa,EAAQ,EAAS,CAC5B,SAAU,GACR,QAAS,KACT,QAAS,MACN,GAGE,EAAM,iBAAiB,CAC5B,8BACA,KAAK,gBAAgB,GACrB,EAAQ,SAAW,yBAAyB,KAAK,OAAO,EAAQ,WAChE,EAAQ,SAAW,mBAAmB,KAAK,OAAO,EAAQ,WAC1D,MAIJ,WAAW,EAAQ,CACjB,MAAO,yBAAyB,KAAK,gBAAgB,MAGvD,iBAAiB,EAAS,CACxB,KAAM,GAAgB,CACpB,UACA,uBACA,wBAEF,GAAI,EAAQ,MAAQ,MAAM,QAAQ,EAAQ,OAAS,EAAQ,KAAK,OAAS,EACvE,SAAW,KAAc,GAAQ,KAC/B,EAAc,KAAK,KAAK,OAAO,IAGnC,MAAO,GAAM,iBAAiB,CAC5B,oCACA,mCACA,6BAA6B,EAAc,KAAK,SAChD,MAIJ,gBAAgB,EAAU,CACxB,GAAI,GAAQ,iGACZ,MAAI,GACF,GAAS,uBAAuB,KAAK,OAAO,KAE5C,GAAS,iFAEJ,GAAG,MA/Cd,6BAmDA,OAAO,QAAU",
  "names": []
}
