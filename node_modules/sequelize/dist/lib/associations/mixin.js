"use strict";var f=Object.defineProperty;var a=(o,s)=>f(o,"name",{value:s,configurable:!0});const r=require("lodash"),k=require("./has-one"),c=require("./has-many"),u=require("./belongs-to-many"),m=require("./belongs-to");function h(o,s){return o&&o.prototype&&o.prototype instanceof s.Sequelize.Model}a(h,"isModel");const n={hasMany(o,s={}){if(!h(o,this.sequelize))throw new Error(`${this.name}.hasMany called with something that's not a subclass of Sequelize.Model`);const e=this;s.hooks=s.hooks===void 0?!1:Boolean(s.hooks),s.useHooks=s.hooks,Object.assign(s,r.omit(e.options,["hooks"])),s.useHooks&&this.runHooks("beforeAssociate",{source:e,target:o,type:c},s);const i=new c(e,o,s);return e.associations[i.associationAccessor]=i,i._injectAttributes(),i.mixin(e.prototype),s.useHooks&&this.runHooks("afterAssociate",{source:e,target:o,type:c,association:i},s),i},belongsToMany(o,s={}){if(!h(o,this.sequelize))throw new Error(`${this.name}.belongsToMany called with something that's not a subclass of Sequelize.Model`);const e=this;s.hooks=s.hooks===void 0?!1:Boolean(s.hooks),s.useHooks=s.hooks,s.timestamps=s.timestamps===void 0?this.sequelize.options.timestamps:s.timestamps,Object.assign(s,r.omit(e.options,["hooks","timestamps","scopes","defaultScope"])),s.useHooks&&this.runHooks("beforeAssociate",{source:e,target:o,type:u},s);const i=new u(e,o,s);return e.associations[i.associationAccessor]=i,i._injectAttributes(),i.mixin(e.prototype),s.useHooks&&this.runHooks("afterAssociate",{source:e,target:o,type:u,association:i},s),i},getAssociations(o){return Object.values(this.associations).filter(s=>s.target.name===o.name)},getAssociationForAlias(o,s){return this.getAssociations(o).find(e=>e.verifyAssociationAlias(s))||null}};function l(o){return function(s,e={}){const i=this;if(!h(s,i.sequelize))throw new Error(`${i.name}.${r.lowerFirst(o.name)} called with something that's not a subclass of Sequelize.Model`);e.hooks=e.hooks===void 0?!1:Boolean(e.hooks),e.useHooks=e.hooks,e.useHooks&&i.runHooks("beforeAssociate",{source:i,target:s,type:o},e);const t=new o(i,s,Object.assign(e,i.options));return i.associations[t.associationAccessor]=t,t._injectAttributes(),t.mixin(i.prototype),e.useHooks&&i.runHooks("afterAssociate",{source:i,target:s,type:o,association:t},e),t}}a(l,"singleLinked"),n.hasOne=l(k),n.belongsTo=l(m),module.exports=n,module.exports.Mixin=n,module.exports.default=n;
//# sourceMappingURL=mixin.js.map
